{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\nvar LAYER_TYPES = {\n  fill: 'fill',\n  line: 'line',\n  symbol: 'symbol',\n  circle: 'circle',\n  'fill-extrusion': 'fill-extrusion',\n  raster: 'raster',\n  background: 'background',\n  heatmap: 'heatmap',\n  hillshade: 'hillshade'\n};\nvar propTypes = {\n  type: PropTypes.oneOf(Object.keys(LAYER_TYPES)).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\nfunction diffLayerStyles(map, id, props, prevProps) {\n  var _props$layout = props.layout,\n      layout = _props$layout === void 0 ? {} : _props$layout,\n      _props$paint = props.paint,\n      paint = _props$paint === void 0 ? {} : _props$paint,\n      filter = props.filter,\n      minzoom = props.minzoom,\n      maxzoom = props.maxzoom,\n      beforeId = props.beforeId,\n      otherProps = _objectWithoutProperties(props, [\"layout\", \"paint\", \"filter\", \"minzoom\", \"maxzoom\", \"beforeId\"]);\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n\n  if (layout !== prevProps.layout) {\n    var prevLayout = prevProps.layout || {};\n\n    for (var key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n\n    for (var _key in prevLayout) {\n      if (!layout.hasOwnProperty(_key)) {\n        map.setLayoutProperty(id, _key, undefined);\n      }\n    }\n  }\n\n  if (paint !== prevProps.paint) {\n    var prevPaint = prevProps.paint || {};\n\n    for (var _key2 in paint) {\n      if (!deepEqual(paint[_key2], prevPaint[_key2])) {\n        map.setPaintProperty(id, _key2, paint[_key2]);\n      }\n    }\n\n    for (var _key3 in prevPaint) {\n      if (!paint.hasOwnProperty(_key3)) {\n        map.setPaintProperty(id, _key3, undefined);\n      }\n    }\n  }\n\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n\n  for (var _key4 in otherProps) {\n    if (!deepEqual(otherProps[_key4], prevProps[_key4])) {\n      map.setLayerProperty(id, _key4, otherProps[_key4]);\n    }\n  }\n}\n\nvar layerCounter = 0;\n\nvar Layer = function (_PureComponent) {\n  _inherits(Layer, _PureComponent);\n\n  var _super = _createSuper(Layer);\n\n  function Layer(_props) {\n    var _this;\n\n    _classCallCheck(this, Layer);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_map\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_layerOptions\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateLayer\", function () {\n      var map = _this._map;\n\n      if (!map) {\n        return;\n      }\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props,\n          layerOptions = _assertThisInitialize._layerOptions;\n\n      assert(!props.id || props.id === _this.id, 'layer id changed');\n      assert(props.type === _this.type, 'layer type changed');\n\n      if (!_this.getLayer()) {\n        _this._createLayer();\n\n        return;\n      }\n\n      try {\n        diffLayerStyles(map, _this.id, props, layerOptions);\n        Object.assign(layerOptions, props);\n      } catch (error) {\n        console.warn(error);\n      }\n    });\n\n    _this.id = _props.id || \"jsx-layer-\".concat(layerCounter++);\n    _this.type = _props.type;\n    return _this;\n  }\n\n  _createClass(Layer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._updateLayer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._updateLayer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var map = this._map;\n\n      if (map) {\n        map.off('styledata', this._updateLayer);\n\n        if (map.style && map.style._loaded) {\n          map.removeLayer(this.id);\n        }\n      }\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      var map = this._map;\n      return map && map.style && map.getLayer(this.id);\n    }\n  }, {\n    key: \"_createLayer\",\n    value: function _createLayer() {\n      var map = this._map;\n\n      if (map.style && map.style._loaded) {\n        var options = Object.assign({}, this.props);\n        options.id = this.id;\n        delete options.beforeId;\n        map.addLayer(options, this.props.beforeId);\n        this._layerOptions = options;\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render(context) {\n      if (!this._map && context.map) {\n        this._map = context.map;\n\n        this._map.on('styledata', this._updateLayer);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MapContext.Consumer, null, this._render.bind(this));\n    }\n  }]);\n\n  return Layer;\n}(PureComponent);\n\n_defineProperty(Layer, \"propTypes\", propTypes);\n\nexport { Layer as default };","map":{"version":3,"sources":["../../../src/components/layer.js"],"names":["LAYER_TYPES","fill","line","symbol","circle","raster","background","heatmap","hillshade","propTypes","type","PropTypes","Object","id","source","beforeId","string","layout","paint","filter","minzoom","maxzoom","otherProps","props","prevProps","map","prevLayout","deepEqual","prevPaint","layerCounter","Layer","PureComponent","options","layerOptions","assert","diffLayerStyles","console","context"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nimport type {MapContextProps} from './map-context';\n\nconst LAYER_TYPES = {\n  fill: 'fill',\n  line: 'line',\n  symbol: 'symbol',\n  circle: 'circle',\n  'fill-extrusion': 'fill-extrusion',\n  raster: 'raster',\n  background: 'background',\n  heatmap: 'heatmap',\n  hillshade: 'hillshade'\n};\n\nconst propTypes = {\n  type: PropTypes.oneOf(Object.keys(LAYER_TYPES)).isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\nexport type LayerTypes = $Keys<typeof LAYER_TYPES>;\n\ntype LayerProps = {\n  id?: string,\n  type: LayerTypes,\n  source?: string,\n  'source-layer'?: string,\n  beforeId?: string,\n  layout: any,\n  paint: any,\n  filter?: Array<mixed>,\n  minzoom?: number,\n  maxzoom?: number\n};\n\n/* eslint-disable complexity, max-statements */\nfunction diffLayerStyles(map: any, id: string, props: LayerProps, prevProps: LayerProps) {\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    const prevLayout = prevProps.layout || {};\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevLayout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n    for (const key in prevLayout) {\n      if (!layout.hasOwnProperty(key)) {\n        map.setLayoutProperty(id, key, undefined);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    const prevPaint = prevProps.paint || {};\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevPaint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n    for (const key in prevPaint) {\n      if (!paint.hasOwnProperty(key)) {\n        map.setPaintProperty(id, key, undefined);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (const key in otherProps) {\n    if (!deepEqual(otherProps[key], prevProps[key])) {\n      map.setLayerProperty(id, key, otherProps[key]);\n    }\n  }\n}\n/* eslint-enable complexity, max-statements */\n\nlet layerCounter = 0;\n\nexport default class Layer<Props: LayerProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-layer-${layerCounter++}`;\n    this.type = props.type;\n  }\n\n  componentDidMount() {\n    this._updateLayer();\n  }\n\n  componentDidUpdate() {\n    this._updateLayer();\n  }\n\n  componentWillUnmount() {\n    const map = this._map;\n    if (map) {\n      map.off('styledata', this._updateLayer);\n      if (map.style && map.style._loaded) {\n        map.removeLayer(this.id);\n      }\n    }\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n  _layerOptions: any = {};\n\n  getLayer() {\n    const map = this._map;\n    return map && map.style && map.getLayer(this.id);\n  }\n\n  _createLayer() {\n    const map = this._map;\n\n    if (map.style && map.style._loaded) {\n      const options = Object.assign({}, this.props);\n      options.id = this.id;\n      delete options.beforeId;\n\n      map.addLayer(options, this.props.beforeId);\n      this._layerOptions = options;\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateLayer = () => {\n    const map = this._map;\n    if (!map) {\n      return;\n    }\n\n    const {props, _layerOptions: layerOptions} = this;\n    assert(!props.id || props.id === this.id, 'layer id changed');\n    assert(props.type === this.type, 'layer type changed');\n\n    if (!this.getLayer()) {\n      this._createLayer();\n      return;\n    }\n\n    try {\n      diffLayerStyles(map, this.id, props, layerOptions);\n      Object.assign(layerOptions, props);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n    }\n  };\n  /* eslint-disable complexity */\n\n  _render(context: MapContextProps) {\n    if (!this._map && context.map) {\n      this._map = context.map;\n      this._map.on('styledata', this._updateLayer);\n    }\n    return null;\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}