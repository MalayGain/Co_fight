{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from '../components/base-control';\nimport { window } from '../utils/globals';\nvar propTypes = Object.assign({}, BaseControl.propTypes, {\n  redraw: PropTypes.func.isRequired\n});\nvar defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false,\n  capturePointerMove: false\n};\n\nvar CanvasOverlay = function (_BaseControl) {\n  _inherits(CanvasOverlay, _BaseControl);\n\n  var _super = _createSuper(CanvasOverlay);\n\n  function CanvasOverlay() {\n    var _this;\n\n    _classCallCheck(this, CanvasOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_canvas\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_ctx\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_redraw\", function () {\n      var ctx = _this._ctx;\n\n      if (!ctx) {\n        return;\n      }\n\n      var pixelRatio = window.devicePixelRatio || 1;\n      ctx.save();\n      ctx.scale(pixelRatio, pixelRatio);\n      var _this$_context = _this._context,\n          viewport = _this$_context.viewport,\n          isDragging = _this$_context.isDragging;\n\n      _this.props.redraw({\n        width: viewport.width,\n        height: viewport.height,\n        ctx: ctx,\n        isDragging: isDragging,\n        project: viewport.project.bind(viewport),\n        unproject: viewport.unproject.bind(viewport)\n      });\n\n      ctx.restore();\n    });\n\n    return _this;\n  }\n\n  _createClass(CanvasOverlay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var canvas = this._containerRef.current;\n\n      if (canvas) {\n        this._canvas = canvas;\n        this._ctx = canvas.getContext('2d');\n      }\n\n      this._redraw();\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      var _this$_context$viewpo = this._context.viewport,\n          width = _this$_context$viewpo.width,\n          height = _this$_context$viewpo.height;\n\n      this._redraw();\n\n      return React.createElement(\"canvas\", {\n        ref: this._containerRef,\n        width: width * pixelRatio,\n        height: height * pixelRatio,\n        style: {\n          width: \"\".concat(width, \"px\"),\n          height: \"\".concat(height, \"px\"),\n          position: 'absolute',\n          left: 0,\n          top: 0\n        }\n      });\n    }\n  }]);\n\n  return CanvasOverlay;\n}(BaseControl);\n\n_defineProperty(CanvasOverlay, \"propTypes\", propTypes);\n\n_defineProperty(CanvasOverlay, \"defaultProps\", defaultProps);\n\nexport { CanvasOverlay as default };","map":{"version":3,"sources":["../../../src/overlays/canvas-overlay.js"],"names":["propTypes","BaseControl","redraw","PropTypes","isRequired","defaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","capturePointerMove","CanvasOverlay","canvas","ctx","pixelRatio","window","viewport","isDragging","width","height","project","unproject","position","left","top"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,4BAAA;AACA,SAAA,MAAA,QAAA,kBAAA;AAIA,IAAMA,SAAS,GAAG,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkBC,WAAW,CAA7B,SAAA,EAAyC;AACzDC,EAAAA,MAAM,EAAEC,SAAS,CAATA,IAAAA,CAAeC;AADkC,CAAzC,CAAlB;AAIA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EADM,KAAA;AAEnBC,EAAAA,WAAW,EAFQ,KAAA;AAGnBC,EAAAA,YAAY,EAHO,KAAA;AAInBC,EAAAA,kBAAkB,EAJC,KAAA;AAKnBC,EAAAA,kBAAkB,EAAE;AALD,CAArB;;IAYqBC,a;;;;;;;;;;;;;;;;;;;;8DAgBT,YAAM;AACd,UAAME,GAAG,GAAG,KAAA,CAAZ,IAAA;;AACA,UAAI,CAAJ,GAAA,EAAU;AACR;AACD;;AAED,UAAMC,UAAU,GAAGC,MAAM,CAANA,gBAAAA,IAAnB,CAAA;AACAF,MAAAA,GAAG,CAAHA,IAAAA;AACAA,MAAAA,GAAG,CAAHA,KAAAA,CAAAA,UAAAA,EAAAA,UAAAA;AARc,UAAA,cAAA,GAUiB,KAAA,CAVjB,QAAA;AAAA,UAUPG,QAVO,GAAA,cAAA,CAAA,QAAA;AAAA,UAUGC,UAVH,GAAA,cAAA,CAAA,UAAA;;AAWd,MAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAkB;AAChBC,QAAAA,KAAK,EAAEF,QAAQ,CADC,KAAA;AAEhBG,QAAAA,MAAM,EAAEH,QAAQ,CAFA,MAAA;AAGhBH,QAAAA,GAAG,EAHa,GAAA;AAIhBI,QAAAA,UAAU,EAJM,UAAA;AAKhBG,QAAAA,OAAO,EAAEJ,QAAQ,CAARA,OAAAA,CAAAA,IAAAA,CALO,QAKPA,CALO;AAMhBK,QAAAA,SAAS,EAAEL,QAAQ,CAARA,SAAAA,CAAAA,IAAAA,CAAAA,QAAAA;AANK,OAAlB;;AASAH,MAAAA,GAAG,CAAHA,OAAAA;;;;;;;;wCA7BkB;AAClB,UAAMD,MAAM,GAAG,KAAA,aAAA,CAAf,OAAA;;AACA,UAAA,MAAA,EAAY;AACV,aAAA,OAAA,GAAA,MAAA;AACA,aAAA,IAAA,GAAYA,MAAM,CAANA,UAAAA,CAAZ,IAAYA,CAAZ;AACD;;AACD,WAAA,OAAA;AACD;;;8BAyBS;AACR,UAAME,UAAU,GAAGC,MAAM,CAANA,gBAAAA,IAAnB,CAAA;AADQ,UAAA,qBAAA,GAIJ,KAJI,QAIJ,CAJI,QAAA;AAAA,UAGKG,KAHL,GAAA,qBAAA,CAAA,KAAA;AAAA,UAGYC,MAHZ,GAAA,qBAAA,CAAA,MAAA;;AAKR,WAAA,OAAA;;AAEA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,QAAA,GAAG,EAAE,KADP,aAAA;AAEE,QAAA,KAAK,EAAED,KAAK,GAFd,UAAA;AAGE,QAAA,MAAM,EAAEC,MAAM,GAHhB,UAAA;AAIE,QAAA,KAAK,EAAE;AACLD,UAAAA,KAAK,EAAA,GAAA,MAAA,CAAA,KAAA,EADA,IACA,CADA;AAELC,UAAAA,MAAM,EAAA,GAAA,MAAA,CAAA,MAAA,EAFD,IAEC,CAFD;AAGLG,UAAAA,QAAQ,EAHH,UAAA;AAILC,UAAAA,IAAI,EAJC,CAAA;AAKLC,UAAAA,GAAG,EAAE;AALA;AAJT,OAAA,CADF;AAcD;;;;EA5DwCvB,W;;gBAAtBU,a,eACAX,S;;gBADAW,a,kBAEGN,Y;;SAFHM,a","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from '../components/base-control';\nimport {window} from '../utils/globals';\n\nimport type {BaseControlProps} from '../components/base-control';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  redraw: PropTypes.func.isRequired\n});\n\nconst defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false,\n  capturePointerMove: false\n};\n\nexport type CanvasOverlayProps = BaseControlProps & {\n  redraw: Function\n};\n\nexport default class CanvasOverlay extends BaseControl<CanvasOverlayProps, *, HTMLCanvasElement> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  _canvas: ?HTMLCanvasElement;\n  _ctx: any;\n\n  componentDidMount() {\n    const canvas = this._containerRef.current;\n    if (canvas) {\n      this._canvas = canvas;\n      this._ctx = canvas.getContext('2d');\n    }\n    this._redraw();\n  }\n\n  _redraw = () => {\n    const ctx = this._ctx;\n    if (!ctx) {\n      return;\n    }\n\n    const pixelRatio = window.devicePixelRatio || 1;\n    ctx.save();\n    ctx.scale(pixelRatio, pixelRatio);\n\n    const {viewport, isDragging} = this._context;\n    this.props.redraw({\n      width: viewport.width,\n      height: viewport.height,\n      ctx,\n      isDragging,\n      project: viewport.project.bind(viewport),\n      unproject: viewport.unproject.bind(viewport)\n    });\n\n    ctx.restore();\n  };\n\n  _render() {\n    const pixelRatio = window.devicePixelRatio || 1;\n    const {\n      viewport: {width, height}\n    } = this._context;\n    this._redraw();\n\n    return (\n      <canvas\n        ref={this._containerRef}\n        width={width * pixelRatio}\n        height={height * pixelRatio}\n        style={{\n          width: `${width}px`,\n          height: `${height}px`,\n          position: 'absolute',\n          left: 0,\n          top: 0\n        }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}