{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport { PureComponent, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\nvar propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\nvar sourceCounter = 0;\n\nvar Source = function (_PureComponent) {\n  _inherits(Source, _PureComponent);\n\n  var _super = _createSuper(Source);\n\n  function Source(_props) {\n    var _this;\n\n    _classCallCheck(this, Source);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_map\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_sourceOptions\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateSource\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          type = _assertThisInitialize.type,\n          map = _assertThisInitialize._map;\n\n      if (!map) {\n        return;\n      }\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          sourceOptions = _assertThisInitialize2._sourceOptions,\n          props = _assertThisInitialize2.props;\n\n      assert(!props.id || props.id === _this.id, 'source id changed');\n      assert(props.type === type, 'source type changed');\n      var changedKey = '';\n      var changedKeyCount = 0;\n\n      for (var key in props) {\n        if (key !== 'children' && key !== 'id' && !deepEqual(sourceOptions[key], props[key])) {\n          sourceOptions[key] = props[key];\n          changedKey = key;\n          changedKeyCount++;\n        }\n      }\n\n      var source = _this.getSource();\n\n      if (!source) {\n        _this._createSource(sourceOptions);\n\n        return;\n      }\n\n      if (!changedKeyCount) {\n        return;\n      }\n\n      if (type === 'geojson') {\n        source.setData(sourceOptions.data);\n      } else if (type === 'image') {\n        source.updateImage({\n          url: sourceOptions.url,\n          coordinates: sourceOptions.coordinates\n        });\n      } else if ((type === 'canvas' || type === 'video') && changedKeyCount === 1 && changedKey === 'coordinates') {\n        source.setCoordinates(sourceOptions.coordinates);\n      } else if (type === 'vector' && source.setUrl) {\n        switch (changedKey) {\n          case 'url':\n            source.setUrl(sourceOptions.url);\n            break;\n\n          case 'tiles':\n            source.setTiles(sourceOptions.tiles);\n            break;\n\n          default:\n        }\n      } else {\n        console.warn(\"Unable to update <Source> prop: \".concat(changedKey));\n      }\n    });\n\n    _this.id = _props.id || \"jsx-source-\".concat(sourceCounter++);\n    _this.type = _props.type;\n    return _this;\n  }\n\n  _createClass(Source, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this2 = this;\n\n      var map = this._map;\n\n      if (map) {\n        map.off('styledata', this._updateSource);\n        requestAnimationFrame(function () {\n          if (map.style && map.style._loaded) {\n            map.removeSource(_this2.id);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      var map = this._map;\n      return map && map.style && map.getSource(this.id);\n    }\n  }, {\n    key: \"_createSource\",\n    value: function _createSource(sourceOptions) {\n      var map = this._map;\n\n      if (map.style && map.style._loaded) {\n        map.addSource(this.id, sourceOptions);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render(context) {\n      var _this3 = this;\n\n      if (!this._map && context.map) {\n        this._map = context.map;\n\n        this._map.on('styledata', this._updateSource);\n      }\n\n      this._updateSource();\n\n      return React.Children.map(this.props.children, function (child) {\n        return child && cloneElement(child, {\n          source: _this3.id\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MapContext.Consumer, null, this._render.bind(this));\n    }\n  }]);\n\n  return Source;\n}(PureComponent);\n\n_defineProperty(Source, \"propTypes\", propTypes);\n\nexport { Source as default };","map":{"version":3,"sources":["../../../src/components/source.js"],"names":["propTypes","type","PropTypes","id","string","sourceCounter","Source","PureComponent","props","map","requestAnimationFrame","sourceOptions","assert","changedKey","changedKeyCount","key","deepEqual","source","url","coordinates","console","context","child","cloneElement"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {PureComponent, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\n\ntype SourceProps = {\n  id?: string,\n  type: string,\n  children?: any\n};\n\nlet sourceCounter = 0;\n\nexport default class Source<Props: SourceProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-source-${sourceCounter++}`;\n    this.type = props.type;\n  }\n\n  componentWillUnmount() {\n    /* global requestAnimationFrame */\n    // Do not remove source immediately because the\n    // dependent <Layer>s' componentWillUnmount() might not have been called\n    // Removing source before dependent layers will throw error\n    // TODO - find a more robust solution\n    const map = this._map;\n    if (map) {\n      map.off('styledata', this._updateSource);\n      requestAnimationFrame(() => {\n        if (map.style && map.style._loaded) {\n          map.removeSource(this.id);\n        }\n      });\n    }\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n  _sourceOptions: any = {};\n\n  getSource() {\n    const map = this._map;\n    return map && map.style && map.getSource(this.id);\n  }\n\n  _createSource(sourceOptions: any) {\n    const map = this._map;\n    if (map.style && map.style._loaded) {\n      map.addSource(this.id, sourceOptions);\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateSource = () => {\n    const {type, _map: map} = this;\n    if (!map) {\n      return;\n    }\n\n    const {_sourceOptions: sourceOptions, props} = this;\n    assert(!props.id || props.id === this.id, 'source id changed');\n    assert(props.type === type, 'source type changed');\n\n    let changedKey = '';\n    let changedKeyCount = 0;\n\n    for (const key in props) {\n      if (key !== 'children' && key !== 'id' && !deepEqual(sourceOptions[key], props[key])) {\n        sourceOptions[key] = props[key];\n        changedKey = key;\n        changedKeyCount++;\n      }\n    }\n\n    const source = this.getSource();\n    if (!source) {\n      this._createSource(sourceOptions);\n      return;\n    }\n    if (!changedKeyCount) {\n      return;\n    }\n    if (type === 'geojson') {\n      source.setData(sourceOptions.data);\n    } else if (type === 'image') {\n      source.updateImage({url: sourceOptions.url, coordinates: sourceOptions.coordinates});\n    } else if (\n      (type === 'canvas' || type === 'video') &&\n      changedKeyCount === 1 &&\n      changedKey === 'coordinates'\n    ) {\n      source.setCoordinates(sourceOptions.coordinates);\n    } else if (type === 'vector' && source.setUrl) {\n      // Added in 1.12.0:\n      // vectorTileSource.setTiles\n      // vectorTileSource.setUrl\n      switch (changedKey) {\n        case 'url':\n          source.setUrl(sourceOptions.url);\n          break;\n        case 'tiles':\n          source.setTiles(sourceOptions.tiles);\n          break;\n        default:\n      }\n    } else {\n      // eslint-disable-next-line\n      console.warn(`Unable to update <Source> prop: ${changedKey}`);\n    }\n  };\n  /* eslint-enable complexity */\n\n  _render(context: MapContextProps) {\n    if (!this._map && context.map) {\n      this._map = context.map;\n      this._map.on('styledata', this._updateSource);\n    }\n    this._updateSource();\n    return React.Children.map(\n      this.props.children,\n      child =>\n        child &&\n        cloneElement(child, {\n          source: this.id\n        })\n    );\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}