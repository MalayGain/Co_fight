{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\nimport { isValid, getEndValueByShortestPath } from './transition-utils';\nimport { lerp } from '../math-utils';\nvar VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\nvar LinearInterpolator = function (_TransitionInterpolat) {\n  _inherits(LinearInterpolator, _TransitionInterpolat);\n\n  var _super = _createSuper(LinearInterpolator);\n\n  function LinearInterpolator() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LinearInterpolator);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"around\", void 0);\n\n    if (Array.isArray(opts)) {\n      opts = {\n        transitionProps: opts\n      };\n    }\n\n    _this.propNames = opts.transitionProps || VIEWPORT_TRANSITION_PROPS;\n\n    if (opts.around) {\n      _this.around = opts.around;\n    }\n\n    return _this;\n  }\n\n  _createClass(LinearInterpolator, [{\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      var startViewportProps = {};\n      var endViewportProps = {};\n\n      if (this.around) {\n        startViewportProps.around = this.around;\n        var aroundLngLat = new WebMercatorViewport(startProps).unproject(this.around);\n        Object.assign(endViewportProps, endProps, {\n          around: new WebMercatorViewport(endProps).project(aroundLngLat),\n          aroundLngLat: aroundLngLat\n        });\n      }\n\n      var _iterator = _createForOfIteratorHelper(this.propNames),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          var startValue = startProps[key];\n          var endValue = endProps[key];\n          assert(isValid(startValue) && isValid(endValue), \"\".concat(key, \" must be supplied for transition\"));\n          startViewportProps[key] = startValue;\n          endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return {\n        start: startViewportProps,\n        end: endViewportProps\n      };\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var viewport = {};\n\n      var _iterator2 = _createForOfIteratorHelper(this.propNames),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          viewport[key] = lerp(startProps[key], endProps[key], t);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (endProps.around) {\n        var _WebMercatorViewport$ = new WebMercatorViewport(Object.assign({}, endProps, viewport)).getMapCenterByLngLatPosition({\n          lngLat: endProps.aroundLngLat,\n          pos: lerp(startProps.around, endProps.around, t)\n        }),\n            _WebMercatorViewport$2 = _slicedToArray(_WebMercatorViewport$, 2),\n            longitude = _WebMercatorViewport$2[0],\n            latitude = _WebMercatorViewport$2[1];\n\n        viewport.longitude = longitude;\n        viewport.latitude = latitude;\n      }\n\n      return viewport;\n    }\n  }]);\n\n  return LinearInterpolator;\n}(TransitionInterpolator);\n\nexport { LinearInterpolator as default };","map":{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["VIEWPORT_TRANSITION_PROPS","LinearInterpolator","TransitionInterpolator","opts","Array","transitionProps","startProps","endProps","startViewportProps","endViewportProps","aroundLngLat","Object","around","key","startValue","endValue","assert","isValid","getEndValueByShortestPath","start","end","t","viewport","lerp","longitude","latitude","lngLat","pos"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA,mBAAA,MAAA,2BAAA;AAEA,OAAA,MAAA,MAAA,WAAA;AACA,OAAA,sBAAA,MAAA,2BAAA;AAEA,SAAA,OAAA,EAAA,yBAAA,QAAA,oBAAA;AACA,SAAA,IAAA,QAAA,eAAA;AAIA,IAAMA,yBAAyB,GAAG,CAAA,WAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAlC,OAAkC,CAAlC;;IAUqBC,kB;;;;;AAMnB,WAAA,kBAAA,GAKE;AAAA,QAAA,KAAA;;AAAA,QAJAE,IAIA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADI,EACJ;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,CAAA;;AACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;;AADA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAGA,QAAIC,KAAK,CAALA,OAAAA,CAAJ,IAAIA,CAAJ,EAAyB;AAEvBD,MAAAA,IAAI,GAAG;AAACE,QAAAA,eAAe,EAAEF;AAAlB,OAAPA;AACD;;AAED,IAAA,KAAA,CAAA,SAAA,GAAiBA,IAAI,CAAJA,eAAAA,IAAjB,yBAAA;;AACA,QAAIA,IAAI,CAAR,MAAA,EAAiB;AACf,MAAA,KAAA,CAAA,MAAA,GAAcA,IAAI,CAAlB,MAAA;AACD;;AAXD,WAAA,KAAA;AAYD;;;;oCAIeG,U,EAA2BC,Q,EAAyB;AAClE,UAAMC,kBAAkB,GAAxB,EAAA;AACA,UAAMC,gBAAgB,GAAtB,EAAA;;AAEA,UAAI,KAAJ,MAAA,EAAiB;AAEfD,QAAAA,kBAAkB,CAAlBA,MAAAA,GAA4B,KAA5BA,MAAAA;AAEA,YAAME,YAAY,GAAG,IAAA,mBAAA,CAAA,UAAA,EAAA,SAAA,CAA8C,KAAnE,MAAqB,CAArB;AACAC,QAAAA,MAAM,CAANA,MAAAA,CAAAA,gBAAAA,EAAAA,QAAAA,EAA0C;AAExCC,UAAAA,MAAM,EAAE,IAAA,mBAAA,CAAA,QAAA,EAAA,OAAA,CAFgC,YAEhC,CAFgC;AAGxCF,UAAAA,YAAY,EAAZA;AAHwC,SAA1CC;AAKD;;AAdiE,UAAA,SAAA,GAAA,0BAAA,CAgBhD,KAhBgD,SAAA,CAAA;AAAA,UAAA,KAAA;;AAAA,UAAA;AAgBlE,aAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAkC;AAAA,cAAvBE,GAAuB,GAAA,KAAA,CAAA,KAAA;AAChC,cAAMC,UAAU,GAAGR,UAAU,CAA7B,GAA6B,CAA7B;AACA,cAAMS,QAAQ,GAAGR,QAAQ,CAAzB,GAAyB,CAAzB;AACAS,UAAAA,MAAM,CAACC,OAAO,CAAPA,UAAO,CAAPA,IAAuBA,OAAO,CAA/B,QAA+B,CAA/B,EAAA,GAAA,MAAA,CAAA,GAAA,EAAND,kCAAM,CAAA,CAANA;AAEAR,UAAAA,kBAAkB,CAAlBA,GAAkB,CAAlBA,GAAAA,UAAAA;AACAC,UAAAA,gBAAgB,CAAhBA,GAAgB,CAAhBA,GAAwBS,yBAAyB,CAAA,GAAA,EAAA,UAAA,EAAjDT,QAAiD,CAAjDA;AACD;AAvBiE,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,SAAA,CAAA,CAAA,CAAA,GAAA;AAAA,OAAA,SAAA;AAAA,QAAA,SAAA,CAAA,CAAA;AAAA;;AAyBlE,aAAO;AACLU,QAAAA,KAAK,EADA,kBAAA;AAELC,QAAAA,GAAG,EAAEX;AAFA,OAAP;AAID;;;qCAEgBH,U,EAA6BC,Q,EAA2Bc,C,EAAW;AAClF,UAAMC,QAAQ,GAAd,EAAA;;AADkF,UAAA,UAAA,GAAA,0BAAA,CAEhE,KAFgE,SAAA,CAAA;AAAA,UAAA,MAAA;;AAAA,UAAA;AAElF,aAAA,UAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAkC;AAAA,cAAvBT,GAAuB,GAAA,MAAA,CAAA,KAAA;AAChCS,UAAAA,QAAQ,CAARA,GAAQ,CAARA,GAAgBC,IAAI,CAACjB,UAAU,CAAX,GAAW,CAAX,EAAkBC,QAAQ,CAA1B,GAA0B,CAA1B,EAApBe,CAAoB,CAApBA;AACD;AAJiF,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,UAAA,CAAA,CAAA,CAAA,GAAA;AAAA,OAAA,SAAA;AAAA,QAAA,UAAA,CAAA,CAAA;AAAA;;AAMlF,UAAIf,QAAQ,CAAZ,MAAA,EAAqB;AAAA,YAAA,qBAAA,GAEW,IAAA,mBAAA,CAC5BI,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAD4B,QAC5BA,CAD4B,EAAA,4BAAA,CAEC;AAC7Be,UAAAA,MAAM,EAAEnB,QAAQ,CADa,YAAA;AAG7BoB,UAAAA,GAAG,EAAEJ,IAAI,CAACjB,UAAU,CAAX,MAAA,EAAoBC,QAAQ,CAA5B,MAAA,EAAA,CAAA;AAHoB,SAFD,CAFX;AAAA,YAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,YAEZiB,SAFY,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,YAEDC,QAFC,GAAA,sBAAA,CAAA,CAAA,CAAA;;AASnBH,QAAAA,QAAQ,CAARA,SAAAA,GAAAA,SAAAA;AACAA,QAAAA,QAAQ,CAARA,QAAAA,GAAAA,QAAAA;AACD;;AAED,aAAA,QAAA;AACD;;;;EA9E6CpB,sB;;SAA3BD,kB","sourcesContent":["// @flow\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\nimport {lerp} from '../math-utils';\n\nimport type {MapStateProps} from '../map-state';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\ntype TransitionProps = MapStateProps & {\n  around: Array<number>,\n  aroundLngLat: Array<number>\n};\n\n/**\n * Performs linear interpolation of two viewports.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  /**\n   * @param opts {Object}\n   *  - opts.transitionProps {Array}] - list of props to apply linear transition to.\n   *  - opts.around {Array} - a screen point to zoom/rotate around\n   */\n  constructor(\n    opts: {\n      transitionProps?: Array<string>,\n      around?: Array<number>\n    } = {}\n  ) {\n    super();\n\n    if (Array.isArray(opts)) {\n      // backward compatibility\n      opts = {transitionProps: opts};\n    }\n\n    this.propNames = opts.transitionProps || VIEWPORT_TRANSITION_PROPS;\n    if (opts.around) {\n      this.around = opts.around;\n    }\n  }\n\n  around: Array<number>;\n\n  initializeProps(startProps: MapStateProps, endProps: MapStateProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    if (this.around) {\n      // anchor point in origin screen coordinates\n      startViewportProps.around = this.around;\n      // anchor point in spherical coordinates\n      const aroundLngLat = new WebMercatorViewport(startProps).unproject(this.around);\n      Object.assign(endViewportProps, endProps, {\n        // anchor point in destination screen coordinates\n        around: new WebMercatorViewport(endProps).project(aroundLngLat),\n        aroundLngLat\n      });\n    }\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps: TransitionProps, endProps: TransitionProps, t: number) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    if (endProps.around) {\n      // zoom around provided point\n      const [longitude, latitude] = new WebMercatorViewport(\n        Object.assign({}, endProps, viewport)\n      ).getMapCenterByLngLatPosition({\n        lngLat: endProps.aroundLngLat,\n        // anchor point in current screen coordinates\n        pos: lerp(startProps.around, endProps.around, t)\n      });\n      viewport.longitude = longitude;\n      viewport.latitude = latitude;\n    }\n\n    return viewport;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}