{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\nimport MapState from '../utils/map-state';\nimport { LINEAR_TRANSITION_PROPS } from '../utils/map-controller';\nimport deprecateWarn from '../utils/deprecate-warn';\nimport { compareVersions } from '../utils/version';\n\nvar noop = function noop() {};\n\nvar propTypes = Object.assign({}, BaseControl.propTypes, {\n  className: PropTypes.string,\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  showCompass: PropTypes.bool,\n  showZoom: PropTypes.bool,\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\nvar defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\nvar VERSION_LEGACY = 1;\nvar VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion) {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\nvar NavigationControl = function (_BaseControl) {\n  _inherits(NavigationControl, _BaseControl);\n\n  var _super = _createSuper(NavigationControl);\n\n  function NavigationControl(props) {\n    var _this;\n\n    _classCallCheck(this, NavigationControl);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_uiVersion\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onZoomIn\", function () {\n      _this._updateViewport({\n        zoom: _this._context.viewport.zoom + 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onZoomOut\", function () {\n      _this._updateViewport({\n        zoom: _this._context.viewport.zoom - 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResetNorth\", function () {\n      _this._updateViewport({\n        bearing: 0,\n        pitch: 0\n      });\n    });\n\n    deprecateWarn(props);\n    return _this;\n  }\n\n  _createClass(NavigationControl, [{\n    key: \"_updateViewport\",\n    value: function _updateViewport(opts) {\n      var viewport = this._context.viewport;\n      var mapState = new MapState(Object.assign({}, viewport, opts));\n      var viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n      var onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n      var onViewStateChange = this.props.onViewStateChange || this._context.onViewStateChange || noop;\n      onViewStateChange({\n        viewState: viewState\n      });\n      onViewportChange(viewState);\n    }\n  }, {\n    key: \"_renderCompass\",\n    value: function _renderCompass() {\n      var bearing = this._context.viewport.bearing;\n      var style = {\n        transform: \"rotate(\".concat(-bearing, \"deg)\")\n      };\n      return this._uiVersion === VERSION_1_6 ? React.createElement(\"span\", {\n        className: \"mapboxgl-ctrl-icon\",\n        \"aria-hidden\": \"true\",\n        style: style\n      }) : React.createElement(\"span\", {\n        className: \"mapboxgl-ctrl-compass-arrow\",\n        style: style\n      });\n    }\n  }, {\n    key: \"_renderButton\",\n    value: function _renderButton(type, label, callback, children) {\n      return React.createElement(\"button\", {\n        key: type,\n        className: \"mapboxgl-ctrl-icon mapboxgl-ctrl-\".concat(type),\n        type: \"button\",\n        title: label,\n        onClick: callback\n      }, children || React.createElement(\"span\", {\n        className: \"mapboxgl-ctrl-icon\",\n        \"aria-hidden\": \"true\"\n      }));\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          showCompass = _this$props.showCompass,\n          showZoom = _this$props.showZoom,\n          zoomInLabel = _this$props.zoomInLabel,\n          zoomOutLabel = _this$props.zoomOutLabel,\n          compassLabel = _this$props.compassLabel;\n\n      if (!this._uiVersion) {\n        var map = this._context.map;\n        this._uiVersion = map ? getUIVersion(map.version) : VERSION_1_6;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"mapboxgl-ctrl mapboxgl-ctrl-group \".concat(className),\n        ref: this._containerRef\n      }, showZoom && this._renderButton('zoom-in', zoomInLabel, this._onZoomIn), showZoom && this._renderButton('zoom-out', zoomOutLabel, this._onZoomOut), showCompass && this._renderButton('compass', compassLabel, this._onResetNorth, this._renderCompass()));\n    }\n  }]);\n\n  return NavigationControl;\n}(BaseControl);\n\n_defineProperty(NavigationControl, \"propTypes\", propTypes);\n\n_defineProperty(NavigationControl, \"defaultProps\", defaultProps);\n\nexport { NavigationControl as default };","map":{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["noop","propTypes","BaseControl","className","PropTypes","onViewStateChange","onViewportChange","showCompass","showZoom","zoomInLabel","zoomOutLabel","compassLabel","string","defaultProps","VERSION_LEGACY","VERSION_1_6","compareVersions","NavigationControl","deprecateWarn","opts","viewport","mapState","Object","viewState","zoom","bearing","pitch","style","transform","type","label","callback","children","map","getUIVersion","_containerRef"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport deprecateWarn from '../utils/deprecate-warn';\nimport {compareVersions} from '../utils/version';\n\nimport type {BaseControlProps} from './base-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool,\n  // Custom labels assigned to the controls\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\n\nexport type NavigationControlProps = BaseControlProps & {\n  className: string,\n  onViewStateChange?: Function,\n  onViewportChange?: Function,\n  showCompass: boolean,\n  showZoom: boolean,\n  zoomInLabel: string,\n  zoomOutLabel: string,\n  compassLabel: string\n};\n\ntype ViewportProps = {\n  longitude: number,\n  latitude: number,\n  zoom: number,\n  pitch: number,\n  bearing: number\n};\n\n// Mapbox version flags. CSS classes were changed in certain versions.\nconst VERSION_LEGACY = 1;\nconst VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion: string): number {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nexport default class NavigationControl extends BaseControl<\n  NavigationControlProps,\n  *,\n  HTMLDivElement\n> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props: NavigationControlProps) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n  }\n\n  _uiVersion: number;\n\n  _updateViewport(opts: $Shape<ViewportProps>) {\n    const {viewport} = this._context;\n    const mapState = new MapState(Object.assign({}, viewport, opts));\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\n    const onViewStateChange =\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\n\n    // Call new style callback\n    onViewStateChange({viewState});\n\n    // Call old style callback\n    onViewportChange(viewState);\n  }\n\n  _onZoomIn = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom + 1});\n  };\n\n  _onZoomOut = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom - 1});\n  };\n\n  _onResetNorth = () => {\n    this._updateViewport({bearing: 0, pitch: 0});\n  };\n\n  _renderCompass() {\n    const {bearing} = this._context.viewport;\n    const style = {transform: `rotate(${-bearing}deg)`};\n\n    return this._uiVersion === VERSION_1_6 ? (\n      <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" style={style} />\n    ) : (\n      <span className=\"mapboxgl-ctrl-compass-arrow\" style={style} />\n    );\n  }\n\n  _renderButton(type: string, label: string, callback: Function, children: any) {\n    return (\n      <button\n        key={type}\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n        type=\"button\"\n        title={label}\n        onClick={callback}\n      >\n        {children || <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />}\n      </button>\n    );\n  }\n\n  _render() {\n    const {className, showCompass, showZoom, zoomInLabel, zoomOutLabel, compassLabel} = this.props;\n\n    if (!this._uiVersion) {\n      // map may not exist if context is provided by user application (e.g. DeckGL)\n      // in which case we fallback to the most recent UI\n      const {map} = this._context;\n      this._uiVersion = map ? getUIVersion(map.version) : VERSION_1_6;\n    }\n\n    return (\n      <div className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`} ref={this._containerRef}>\n        {showZoom && this._renderButton('zoom-in', zoomInLabel, this._onZoomIn)}\n        {showZoom && this._renderButton('zoom-out', zoomOutLabel, this._onZoomOut)}\n        {showCompass &&\n          this._renderButton('compass', compassLabel, this._onResetNorth, this._renderCompass())}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}