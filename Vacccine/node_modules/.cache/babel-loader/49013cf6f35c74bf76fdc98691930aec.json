{"ast":null,"code":"export var userAgent = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\nvar window_ = typeof window !== 'undefined' ? window : global;\nvar global_ = typeof global !== 'undefined' ? global : window;\nvar document_ = typeof document !== 'undefined' ? document : {};\nexport { window_ as window, global_ as global, document_ as document };\nvar passiveSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      passiveSupported = true;\n      return true;\n    }\n\n  };\n  window_.addEventListener('test', options, options);\n  window_.removeEventListener('test', options, options);\n} catch (err) {}\n\nexport { passiveSupported };","map":{"version":3,"sources":["../../../src/utils/globals.js"],"names":["userAgent","navigator","window_","global_","document_","passiveSupported","options"],"mappings":"AAwBA,OAAO,IAAMA,SAAS,GACpB,OAAA,SAAA,KAAA,WAAA,IAAoCC,SAAS,CAA7C,SAAA,GAA0DA,SAAS,CAATA,SAAAA,CAA1D,WAA0DA,EAA1D,GADK,EAAA;AAGP,IAAMC,OAAO,GAAG,OAAA,MAAA,KAAA,WAAA,GAAA,MAAA,GAAhB,MAAA;AACA,IAAMC,OAAO,GAAG,OAAA,MAAA,KAAA,WAAA,GAAA,MAAA,GAAhB,MAAA;AACA,IAAMC,SAAS,GAAG,OAAA,QAAA,KAAA,WAAA,GAAA,QAAA,GAAlB,EAAA;AAEA,SAAQF,OAAO,IAAf,MAAA,EAA2BC,OAAO,IAAlC,MAAA,EAA8CC,SAAS,IAAvD,QAAA;AAOA,IAAIC,gBAAgB,GAApB,KAAA;;AAGA,IAAI;AACF,MAAMC,OAAO,GAAG;AAGd,QAAA,OAAA,GAAc;AACZD,MAAAA,gBAAgB,GAAhBA,IAAAA;AACA,aAAA,IAAA;AACD;;AANa,GAAhB;AASAH,EAAAA,OAAO,CAAPA,gBAAAA,CAAAA,MAAAA,EAAAA,OAAAA,EAAAA,OAAAA;AACAA,EAAAA,OAAO,CAAPA,mBAAAA,CAAAA,MAAAA,EAAAA,OAAAA,EAAAA,OAAAA;AAXF,CAAA,CAYE,OAAA,GAAA,EAAY,CAAE;;AAEhB,SAAA,gBAAA","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n\n/* global window, global, document, navigator */\nexport const userAgent =\n  typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\n\nconst window_ = typeof window !== 'undefined' ? window : global;\nconst global_ = typeof global !== 'undefined' ? global : window;\nconst document_ = typeof document !== 'undefined' ? document : {};\n\nexport {window_ as window, global_ as global, document_ as document};\n\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */\nlet passiveSupported = false;\n\n/* eslint-disable accessor-pairs, no-empty */\ntry {\n  const options = {\n    // This function will be called when the browser\n    // attempts to access the passive property.\n    get passive() {\n      passiveSupported = true;\n      return true;\n    }\n  };\n\n  window_.addEventListener('test', options, options);\n  window_.removeEventListener('test', options, options);\n} catch (err) {}\n\nexport {passiveSupported};\n"]},"metadata":{},"sourceType":"module"}