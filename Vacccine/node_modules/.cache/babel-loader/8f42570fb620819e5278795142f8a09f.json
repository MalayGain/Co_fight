{"ast":null,"code":"var _jsxFileName = \"/home/abhi/vaccinationp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const url_cases = \"https://disease.sh/v3/covid-19/countries\";\n  const url_vaccinations = \"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1&fullData=false\";\n  const [dataCountries, setDataCountries] = useState({});\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 0,\n    longitude: 0,\n    zoom: 2\n  });\n\n  const prepareData = data => {\n    let vaccinations = [];\n    Object.values(data).map(obj => {\n      if (obj.total_vaccinations) {\n        vaccinations.push(parseInt(obj.total_vaccinations));\n      }\n    });\n    vaccinations.sort((a, b) => a - b);\n    let firstq = vaccinations[Math.floor(vaccinations.length / 4)];\n    let secondq = vaccinations[Math.floor(vaccinations.length / 2)];\n    let thirdq = vaccinations[Math.floor(vaccinations.length * 3 / 4)];\n    Object.values(data).map(obj => {\n      if (!obj.total_vaccinations) {\n        obj.size = 0;\n      } else if (obj.total_vaccinations > 0 && obj.total_vaccinations <= firstq) {\n        obj.size = 15;\n      } else if (obj.total_vaccinations > firstq && obj.total_vaccinations <= secondq) {\n        obj.size = 30;\n      } else if (obj.total_vaccinations > secondq && obj.total_vaccinations <= thirdq) {\n        obj.size = 45;\n      } else {\n        obj.size = 60;\n      }\n    });\n    setDataCountries(data);\n  };\n\n  useEffect(async () => {\n    let full_data = {};\n    let res_items = await Promise.all([fetch(url_cases), fetch(url_vaccinations)]);\n    let data_cases = await res_items[0].json();\n    data_cases.map(item => {\n      const {\n        country,\n        countryInfo,\n        cases,\n        deaths,\n        population\n      } = item;\n      full_data[country] = {\n        country,\n        countryInfo,\n        cases,\n        deaths,\n        population\n      };\n    });\n    let data_vaccinations = await res_items[1].json();\n    data_vaccinations.map((item, index) => {\n      if (full_data[item.country]) {\n        full_data[item.country]['total_vaccinations'] = Object.values(item.timeline)[0];\n      }\n    });\n    prepareData(full_data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar navbar-dark bg-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mx-auto navbar-brand\",\n            children: \"Global Vaccination Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      mapboxApiAccessToken: \"pk.eyJ1IjoiYWJoaWMxMzAzIiwiYSI6ImNrcDhiYnNzcjA3N3Myem9nOGZoeTk4NDQifQ.qwVw_1Zkhn4mRMqXNqRDbg\",\n      onViewportChange: nextViewport => setViewport(nextViewport),\n      mapStyle: \"mapbox://styles/abhic1303/ckp8drcp10aua18owe5crfdk7\",\n      children: dataCountries && Object.values(dataCountries).map((country, index) => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: country.countryInfo.lat,\n          longitude: country.countryInfo.long,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 30,\n              width: 30\n            },\n            className: \"map-marker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"OdCzuxoBctuB1vz6mE1UHOhYguw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/abhi/vaccinationp/src/App.js"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","App","url_cases","url_vaccinations","dataCountries","setDataCountries","viewport","setViewport","width","height","latitude","longitude","zoom","prepareData","data","vaccinations","Object","values","map","obj","total_vaccinations","push","parseInt","sort","a","b","firstq","Math","floor","length","secondq","thirdq","size","full_data","res_items","Promise","all","fetch","data_cases","json","item","country","countryInfo","cases","deaths","population","data_vaccinations","index","timeline","nextViewport","lat","long"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\n\nfunction App() {\n\n  const url_cases =  \"https://disease.sh/v3/covid-19/countries\"\n  const url_vaccinations =  \"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1&fullData=false\"\n\n\nconst [dataCountries, setDataCountries] = useState({})\n\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 0,\n    longitude: 0,\n    zoom: 2\n  });\n\n  const prepareData = (data) => {\n    let vaccinations =  []\n    Object.values(data).map((obj) => {\n      if(obj.total_vaccinations){\n        vaccinations.push(parseInt(obj.total_vaccinations))\n      }\n    })\n    vaccinations.sort((a,b) => a - b)\n    let firstq =  vaccinations[Math.floor(vaccinations.length/4)]\n    let secondq =  vaccinations[Math.floor(vaccinations.length/2)]\n    let thirdq =  vaccinations[Math.floor(vaccinations.length*3/4)]\n\n    Object.values(data).map((obj) => {\n      if(!obj.total_vaccinations){\n        obj.size=0\n      }\n      else if(obj.total_vaccinations > 0 && obj.total_vaccinations <= firstq){\n        obj.size =  15\n      }\n      else if(obj.total_vaccinations > firstq && obj.total_vaccinations <= secondq){\n        obj.size =  30\n      }\n      else if(obj.total_vaccinations > secondq && obj.total_vaccinations <= thirdq){\n        obj.size = 45\n      }\n      else{\n        obj.size = 60\n      }\n    })\n\n    setDataCountries(data)\n  }\n\n  useEffect(async() => {\n    let full_data =  {}\n\n    let res_items = await Promise.all([ fetch(url_cases), fetch(url_vaccinations) ])\n\n    let data_cases = await res_items[0].json()\n    data_cases.map((item) => {\n      const {country, countryInfo, cases, deaths, population} = item\n\n      full_data[country] = {country, countryInfo, cases, deaths, population}\n    })\n\n    let data_vaccinations = await res_items[1].json()\n    data_vaccinations.map((item, index) => {\n     if(full_data[item.country]){\n       full_data[item.country]['total_vaccinations'] = Object.values(item.timeline)[0]\n     }\n    })\n    prepareData(full_data)\n  }, [])\n\n  return (\n    <>\n    <div className=\"header\">\n      <div className=\"navbar navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <h6 className=\"mx-auto navbar-brand\">\n            Global Vaccination Tracker\n          </h6>\n        </div>\n      </div>\n    </div>\n    <ReactMapGL\n      {...viewport}\n      mapboxApiAccessToken= \"pk.eyJ1IjoiYWJoaWMxMzAzIiwiYSI6ImNrcDhiYnNzcjA3N3Myem9nOGZoeTk4NDQifQ.qwVw_1Zkhn4mRMqXNqRDbg\"\n      onViewportChange={nextViewport => setViewport(nextViewport)}\n      mapStyle=\"mapbox://styles/abhic1303/ckp8drcp10aua18owe5crfdk7\">\n\n      {dataCountries && Object.values(dataCountries).map((country, index) => {\n        return(\n          <Marker key={index} latitude={country.countryInfo.lat} longitude={country.countryInfo.long}>\n            <div\n              style={{height: 30, width: 30}}\n              className=\"map-marker\" \n            >\n            </div>\n          </Marker>\n        )\n      })}  \n    </ReactMapGL>\n   </>   \n  );  \n}\n\nexport default App; "]},"metadata":{},"sourceType":"module"}