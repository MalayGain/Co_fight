{"ast":null,"code":"var _jsxFileName = \"/home/abhi/vaccinationp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const url_cases = \"https://disease.sh/v3/covid-19/countries\";\n  const url_vaccinations = \"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1&fullData=false\";\n  const [dataCountries, setDataCountries] = useState({});\n  const [tooltipData, setTooltipData] = useState(null);\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 20,\n    longitude: 77,\n    zoom: 2\n  });\n\n  const prepareData = data => {\n    let vaccinations = [];\n    Object.values(data).forEach(obj => {\n      if (obj.total_vaccinations) {\n        vaccinations.push(parseInt(obj.total_vaccinations));\n      }\n    });\n    vaccinations.sort((a, b) => a - b);\n    let firstq = vaccinations[Math.floor(vaccinations.length / 4)];\n    let secondq = vaccinations[Math.floor(vaccinations.length / 2)];\n    let thirdq = vaccinations[Math.floor(vaccinations.length * 3 / 4)];\n    Object.values(data).forEach(obj => {\n      if (!obj.total_vaccinations) {\n        obj.size = 0;\n      } else if (obj.total_vaccinations > 0 && obj.total_vaccinations <= firstq) {\n        obj.size = 15;\n      } else if (obj.total_vaccinations > firstq && obj.total_vaccinations <= secondq) {\n        obj.size = 30;\n      } else if (obj.total_vaccinations > secondq && obj.total_vaccinations <= thirdq) {\n        obj.size = 45;\n      } else {\n        obj.size = 60;\n      }\n    });\n    setDataCountries(data);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      let full_data = {};\n      let res_items = await Promise.all([fetch(url_cases), fetch(url_vaccinations)]);\n      let data_cases = await res_items[0].json();\n      data_cases.forEach(item => {\n        const {\n          country,\n          countryInfo,\n          cases,\n          deaths,\n          population\n        } = item;\n        full_data[country] = {\n          country,\n          countryInfo,\n          cases,\n          deaths,\n          population\n        };\n      });\n      let data_vaccinations = await res_items[1].json();\n      data_vaccinations.forEach((item, index) => {\n        if (full_data[item.country]) {\n          full_data[item.country]['total_vaccinations'] = Object.values(item.timeline)[0];\n        }\n      });\n      prepareData(full_data);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar navbar-dark bg-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mx-auto navbar-brand\",\n            children: \"Global Vaccination Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n        mapboxApiAccessToken: \"pk.eyJ1IjoiYWJoaWMxMzAzIiwiYSI6ImNrcDhiYnNzcjA3N3Myem9nOGZoeTk4NDQifQ.qwVw_1Zkhn4mRMqXNqRDbg\",\n        onViewportChange: nextViewport => setViewport(nextViewport),\n        mapStyle: \"mapbox://styles/saket2000/ckolf18ga1lxq17l31rw3lrxk\",\n        children: [dataCountries && Object.values(dataCountries).map((country, index) => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            latitude: country.countryInfo.lat,\n            longitude: country.countryInfo.long,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: country.size,\n                width: country.size\n              },\n              className: \"map-marker\",\n              onClick: () => setTooltipData(country)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this);\n        }), tooltipData && /*#__PURE__*/_jsxDEV(Popup, {\n          latitude: tooltipData.countryInfo.lat,\n          longitude: tooltipData.countryInfo.long,\n          anchor: \"bottom\",\n          closeButton: true,\n          onClose: () => setTooltipData(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"tooltip-img\",\n                alt: \"tool-img \",\n                src: tooltipData.countryInfo.flag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), tooltipData.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small heading text-secondary me-2\",\n                  children: \"Total doses given\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h6 heading\",\n                  children: tooltipData.total_vaccinations.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small heading text-secondary me-2\",\n                  children: \"Doses per hundred people\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h6 heading\",\n                  children: Math.round(tooltipData.total_vaccinations / tooltipData.population * 100).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"uPhakcQ0i8lpcOmqlnF4Ia5srSo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/abhi/vaccinationp/src/App.js"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","App","url_cases","url_vaccinations","dataCountries","setDataCountries","tooltipData","setTooltipData","viewport","setViewport","width","height","latitude","longitude","zoom","prepareData","data","vaccinations","Object","values","forEach","obj","total_vaccinations","push","parseInt","sort","a","b","firstq","Math","floor","length","secondq","thirdq","size","fetchData","full_data","res_items","Promise","all","fetch","data_cases","json","item","country","countryInfo","cases","deaths","population","data_vaccinations","index","timeline","nextViewport","map","lat","long","flag","toLocaleString","round"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport './index.css';\n\nfunction App() {\n\n  const url_cases = \"https://disease.sh/v3/covid-19/countries\"\n  const url_vaccinations = \"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=1&fullData=false\"\n\n  const [dataCountries, setDataCountries] = useState({})\n  const [tooltipData, setTooltipData] = useState(null)\n\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 20,\n    longitude: 77,\n    zoom: 2\n  });\n\n  \n\n  const prepareData = (data) => {\n    let vaccinations = []\n    Object.values(data).forEach((obj) => {\n      if(obj.total_vaccinations){\n        vaccinations.push(parseInt(obj.total_vaccinations))\n      }\n    })\n    vaccinations.sort((a,b) => a - b)\n    let firstq = vaccinations[Math.floor(vaccinations.length/4)]\n    let secondq = vaccinations[Math.floor(vaccinations.length/2)]\n    let thirdq = vaccinations[Math.floor(vaccinations.length*3/4)]\n\n    Object.values(data).forEach((obj) => {\n      if(!obj.total_vaccinations){\n        obj.size = 0\n      }\n      else if(obj.total_vaccinations > 0 && obj.total_vaccinations <= firstq){\n        obj.size = 15\n      }\n      else if(obj.total_vaccinations > firstq && obj.total_vaccinations <= secondq){\n        obj.size = 30\n      }\n      else if(obj.total_vaccinations > secondq && obj.total_vaccinations <= thirdq){\n        obj.size = 45\n      }\n      else{\n        obj.size = 60\n      }\n    })\n\n    setDataCountries(data)\n  }\n\n  useEffect(() => {\n    async function fetchData() \n    {\n    let full_data =  {}\n\n    let res_items = await Promise.all([ fetch(url_cases), fetch(url_vaccinations) ])\n\n    let data_cases = await res_items[0].json()\n    data_cases.forEach((item) => {\n      const {country, countryInfo, cases, deaths, population} = item\n\n      full_data[country] = {country, countryInfo, cases, deaths, population}\n    })\n\n    let data_vaccinations = await res_items[1].json()\n    data_vaccinations.forEach((item, index) => {\n     if(full_data[item.country]){\n       full_data[item.country]['total_vaccinations'] = Object.values(item.timeline)[0]\n     }\n    })\n\n    prepareData(full_data)\n    }\n    fetchData();\n  }, []);\n  \n\n  return (\n    <>\n    <div className=\"header\">\n      <div className=\"navbar navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <h6 className=\"mx-auto navbar-brand\">\n            Global Vaccination Tracker\n          </h6>\n        </div>\n      </div>\n    </div>\n    <div className=\"map\">\n       <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiYWJoaWMxMzAzIiwiYSI6ImNrcDhiYnNzcjA3N3Myem9nOGZoeTk4NDQifQ.qwVw_1Zkhn4mRMqXNqRDbg\"\n        onViewportChange={nextViewport => setViewport(nextViewport)}\n        mapStyle=\"mapbox://styles/saket2000/ckolf18ga1lxq17l31rw3lrxk\"\n      > \n        {dataCountries && Object.values(dataCountries).map((country, index) => {\n          return(\n            <Marker key={index} latitude={country.countryInfo.lat} longitude={country.countryInfo.long}>\n              <div \n              style={{height: country.size, width: country.size}}\n              className=\"map-marker\"\n              onClick = {() => setTooltipData(country)} \n              > \n              </div>\n            </Marker>\n          )\n        })}\n        {tooltipData && <Popup\n          latitude={tooltipData.countryInfo.lat}\n          longitude={tooltipData.countryInfo.long}\n          anchor=\"bottom\"\n          closeButton={true}\n          onClose={() => setTooltipData(null)}\n        >\n            <div className=\"tooltip-card\">\n              <div className=\"tooltip-header\">\n                <img className=\"tooltip-img\" alt=\"tool-img \" src={tooltipData.countryInfo.flag}></img>\n                {tooltipData.country}\n              </div>\n              <div className=\"tooltip-content\">\n                <div className=\"content-row\">\n                  <div className=\"small heading text-secondary me-2\">Total doses given</div>\n                  <div className=\"h6 heading\">{tooltipData.total_vaccinations.toLocaleString()}</div>\n                </div>\n                <div className=\"content-row\">\n                  <div className=\"small heading text-secondary me-2\">Doses per hundred people</div>\n                  <div className=\"h6 heading\">{Math.round((tooltipData.total_vaccinations/tooltipData.population)*100).toLocaleString()}</div>\n                </div>\n              </div>\n            </div>\n          </Popup>}\n      </ReactMapGL>\n    </div>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}