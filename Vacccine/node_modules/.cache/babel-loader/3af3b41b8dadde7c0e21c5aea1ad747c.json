{"ast":null,"code":"var DOWN_EVENT = 1;\nvar MOVE_EVENT = 2;\nvar UP_EVENT = 4;\nvar MOUSE_EVENTS = {\n  pointerdown: DOWN_EVENT,\n  pointermove: MOVE_EVENT,\n  pointerup: UP_EVENT,\n  mousedown: DOWN_EVENT,\n  mousemove: MOVE_EVENT,\n  mouseup: UP_EVENT\n};\nvar MOUSE_EVENT_WHICH_LEFT = 1;\nvar MOUSE_EVENT_WHICH_MIDDLE = 2;\nvar MOUSE_EVENT_WHICH_RIGHT = 3;\nvar MOUSE_EVENT_BUTTON_LEFT = 0;\nvar MOUSE_EVENT_BUTTON_MIDDLE = 1;\nvar MOUSE_EVENT_BUTTON_RIGHT = 2;\nvar MOUSE_EVENT_BUTTONS_LEFT_MASK = 1;\nvar MOUSE_EVENT_BUTTONS_RIGHT_MASK = 2;\nvar MOUSE_EVENT_BUTTONS_MIDDLE_MASK = 4;\nexport function whichButtons(event) {\n  var eventType = MOUSE_EVENTS[event.srcEvent.type];\n\n  if (!eventType) {\n    return null;\n  }\n\n  var _event$srcEvent = event.srcEvent,\n      buttons = _event$srcEvent.buttons,\n      button = _event$srcEvent.button,\n      which = _event$srcEvent.which;\n  var leftButton = false;\n  var middleButton = false;\n  var rightButton = false;\n\n  if (eventType === UP_EVENT || eventType === MOVE_EVENT && !Number.isFinite(buttons)) {\n    leftButton = which === MOUSE_EVENT_WHICH_LEFT;\n    middleButton = which === MOUSE_EVENT_WHICH_MIDDLE;\n    rightButton = which === MOUSE_EVENT_WHICH_RIGHT;\n  } else if (eventType === MOVE_EVENT) {\n    leftButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_LEFT_MASK);\n    middleButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_MIDDLE_MASK);\n    rightButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_RIGHT_MASK);\n  } else if (eventType === DOWN_EVENT) {\n    leftButton = button === MOUSE_EVENT_BUTTON_LEFT;\n    middleButton = button === MOUSE_EVENT_BUTTON_MIDDLE;\n    rightButton = button === MOUSE_EVENT_BUTTON_RIGHT;\n  }\n\n  return {\n    leftButton: leftButton,\n    middleButton: middleButton,\n    rightButton: rightButton\n  };\n}\nexport function getOffsetPosition(event, rootElement) {\n  var srcEvent = event.srcEvent;\n\n  if (!event.center && !Number.isFinite(srcEvent.clientX)) {\n    return null;\n  }\n\n  var center = event.center || {\n    x: srcEvent.clientX,\n    y: srcEvent.clientY\n  };\n  var rect = rootElement.getBoundingClientRect();\n  var scaleX = rect.width / rootElement.offsetWidth || 1;\n  var scaleY = rect.height / rootElement.offsetHeight || 1;\n  var offsetCenter = {\n    x: (center.x - rect.left - rootElement.clientLeft) / scaleX,\n    y: (center.y - rect.top - rootElement.clientTop) / scaleY\n  };\n  return {\n    center: center,\n    offsetCenter: offsetCenter\n  };\n}","map":{"version":3,"sources":["../../../src/utils/event-utils.js"],"names":["DOWN_EVENT","MOVE_EVENT","UP_EVENT","MOUSE_EVENTS","pointerdown","pointermove","pointerup","mousedown","mousemove","mouseup","MOUSE_EVENT_WHICH_LEFT","MOUSE_EVENT_WHICH_MIDDLE","MOUSE_EVENT_WHICH_RIGHT","MOUSE_EVENT_BUTTON_LEFT","MOUSE_EVENT_BUTTON_MIDDLE","MOUSE_EVENT_BUTTON_RIGHT","MOUSE_EVENT_BUTTONS_LEFT_MASK","MOUSE_EVENT_BUTTONS_RIGHT_MASK","MOUSE_EVENT_BUTTONS_MIDDLE_MASK","eventType","event","buttons","button","which","leftButton","middleButton","rightButton","Number","Boolean","srcEvent","center","x","y","clientY","rect","rootElement","scaleX","scaleY","offsetCenter"],"mappings":"AACA,IAAMA,UAAU,GAAhB,CAAA;AACA,IAAMC,UAAU,GAAhB,CAAA;AACA,IAAMC,QAAQ,GAAd,CAAA;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EADQ,UAAA;AAEnBC,EAAAA,WAAW,EAFQ,UAAA;AAGnBC,EAAAA,SAAS,EAHU,QAAA;AAInBC,EAAAA,SAAS,EAJU,UAAA;AAKnBC,EAAAA,SAAS,EALU,UAAA;AAMnBC,EAAAA,OAAO,EAAEP;AANU,CAArB;AAUA,IAAMQ,sBAAsB,GAA5B,CAAA;AACA,IAAMC,wBAAwB,GAA9B,CAAA;AACA,IAAMC,uBAAuB,GAA7B,CAAA;AAEA,IAAMC,uBAAuB,GAA7B,CAAA;AACA,IAAMC,yBAAyB,GAA/B,CAAA;AACA,IAAMC,wBAAwB,GAA9B,CAAA;AAEA,IAAMC,6BAA6B,GAAnC,CAAA;AACA,IAAMC,8BAA8B,GAApC,CAAA;AACA,IAAMC,+BAA+B,GAArC,CAAA;AAKA,OAAO,SAAA,YAAA,CAAA,KAAA,EAA6B;AAClC,MAAMC,SAAS,GAAGhB,YAAY,CAACiB,KAAK,CAALA,QAAAA,CAA/B,IAA8B,CAA9B;;AACA,MAAI,CAAJ,SAAA,EAAgB;AAEd,WAAA,IAAA;AACD;;AALiC,MAAA,eAAA,GAODA,KAAK,CAPJ,QAAA;AAAA,MAO3BC,OAP2B,GAAA,eAAA,CAAA,OAAA;AAAA,MAOlBC,MAPkB,GAAA,eAAA,CAAA,MAAA;AAAA,MAOVC,KAPU,GAAA,eAAA,CAAA,KAAA;AAQlC,MAAIC,UAAU,GAAd,KAAA;AACA,MAAIC,YAAY,GAAhB,KAAA;AACA,MAAIC,WAAW,GAAf,KAAA;;AAEA,MAEEP,SAAS,KAATA,QAAAA,IAECA,SAAS,KAATA,UAAAA,IAA4B,CAACQ,MAAM,CAANA,QAAAA,CAJhC,OAIgCA,CAJhC,EAKE;AACAH,IAAAA,UAAU,GAAGD,KAAK,KAAlBC,sBAAAA;AACAC,IAAAA,YAAY,GAAGF,KAAK,KAApBE,wBAAAA;AACAC,IAAAA,WAAW,GAAGH,KAAK,KAAnBG,uBAAAA;AARF,GAAA,MASO,IAAIP,SAAS,KAAb,UAAA,EAA8B;AACnCK,IAAAA,UAAU,GAAGI,OAAO,CAACP,OAAO,GAA5BG,6BAAoB,CAApBA;AACAC,IAAAA,YAAY,GAAGG,OAAO,CAACP,OAAO,GAA9BI,+BAAsB,CAAtBA;AACAC,IAAAA,WAAW,GAAGE,OAAO,CAACP,OAAO,GAA7BK,8BAAqB,CAArBA;AAHK,GAAA,MAIA,IAAIP,SAAS,KAAb,UAAA,EAA8B;AACnCK,IAAAA,UAAU,GAAGF,MAAM,KAAnBE,uBAAAA;AACAC,IAAAA,YAAY,GAAGH,MAAM,KAArBG,yBAAAA;AACAC,IAAAA,WAAW,GAAGJ,MAAM,KAApBI,wBAAAA;AACD;;AAED,SAAO;AAACF,IAAAA,UAAU,EAAX,UAAA;AAAaC,IAAAA,YAAY,EAAzB,YAAA;AAA2BC,IAAAA,WAAW,EAAXA;AAA3B,GAAP;AACD;AAKD,OAAO,SAAA,iBAAA,CAAA,KAAA,EAAA,WAAA,EAA+C;AAAA,MAC7CG,QAD6C,GACjCT,KADiC,CAAA,QAAA;;AAIpD,MAAI,CAACA,KAAK,CAAN,MAAA,IAAiB,CAACO,MAAM,CAANA,QAAAA,CAAgBE,QAAQ,CAA9C,OAAsBF,CAAtB,EAAyD;AAEvD,WAAA,IAAA;AACD;;AAED,MAAMG,MAAM,GAAGV,KAAK,CAALA,MAAAA,IAAgB;AAC7BW,IAAAA,CAAC,EAAEF,QAAQ,CADkB,OAAA;AAE7BG,IAAAA,CAAC,EAAEH,QAAQ,CAACI;AAFiB,GAA/B;AAKA,MAAMC,IAAI,GAAGC,WAAW,CAAxB,qBAAaA,EAAb;AAIA,MAAMC,MAAM,GAAGF,IAAI,CAAJA,KAAAA,GAAaC,WAAW,CAAxBD,WAAAA,IAAf,CAAA;AACA,MAAMG,MAAM,GAAGH,IAAI,CAAJA,MAAAA,GAAcC,WAAW,CAAzBD,YAAAA,IAAf,CAAA;AAGA,MAAMI,YAAY,GAAG;AACnBP,IAAAA,CAAC,EAAE,CAACD,MAAM,CAANA,CAAAA,GAAWI,IAAI,CAAfJ,IAAAA,GAAuBK,WAAW,CAAnC,UAAA,IADgB,MAAA;AAEnBH,IAAAA,CAAC,EAAE,CAACF,MAAM,CAANA,CAAAA,GAAWI,IAAI,CAAfJ,GAAAA,GAAsBK,WAAW,CAAlC,SAAA,IAAgDE;AAFhC,GAArB;AAKA,SAAO;AAACP,IAAAA,MAAM,EAAP,MAAA;AAASQ,IAAAA,YAAY,EAAZA;AAAT,GAAP;AACD","sourcesContent":["/* Constants */\nconst DOWN_EVENT = 1;\nconst MOVE_EVENT = 2;\nconst UP_EVENT = 4;\nconst MOUSE_EVENTS = {\n  pointerdown: DOWN_EVENT,\n  pointermove: MOVE_EVENT,\n  pointerup: UP_EVENT,\n  mousedown: DOWN_EVENT,\n  mousemove: MOVE_EVENT,\n  mouseup: UP_EVENT\n};\n\n// MouseEvent.which https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\nconst MOUSE_EVENT_WHICH_LEFT = 1;\nconst MOUSE_EVENT_WHICH_MIDDLE = 2;\nconst MOUSE_EVENT_WHICH_RIGHT = 3;\n// MouseEvent.button https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_EVENT_BUTTON_LEFT = 0;\nconst MOUSE_EVENT_BUTTON_MIDDLE = 1;\nconst MOUSE_EVENT_BUTTON_RIGHT = 2;\n// MouseEvent.buttons https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\nconst MOUSE_EVENT_BUTTONS_LEFT_MASK = 1;\nconst MOUSE_EVENT_BUTTONS_RIGHT_MASK = 2;\nconst MOUSE_EVENT_BUTTONS_MIDDLE_MASK = 4;\n\n/**\n * Extract the involved mouse button\n */\nexport function whichButtons(event) {\n  const eventType = MOUSE_EVENTS[event.srcEvent.type];\n  if (!eventType) {\n    // Not a mouse evet\n    return null;\n  }\n\n  const {buttons, button, which} = event.srcEvent;\n  let leftButton = false;\n  let middleButton = false;\n  let rightButton = false;\n\n  if (\n    // button is up, need to find out which one was pressed before\n    eventType === UP_EVENT ||\n    // moving but does not support `buttons` API\n    (eventType === MOVE_EVENT && !Number.isFinite(buttons))\n  ) {\n    leftButton = which === MOUSE_EVENT_WHICH_LEFT;\n    middleButton = which === MOUSE_EVENT_WHICH_MIDDLE;\n    rightButton = which === MOUSE_EVENT_WHICH_RIGHT;\n  } else if (eventType === MOVE_EVENT) {\n    leftButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_LEFT_MASK);\n    middleButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_MIDDLE_MASK);\n    rightButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_RIGHT_MASK);\n  } else if (eventType === DOWN_EVENT) {\n    leftButton = button === MOUSE_EVENT_BUTTON_LEFT;\n    middleButton = button === MOUSE_EVENT_BUTTON_MIDDLE;\n    rightButton = button === MOUSE_EVENT_BUTTON_RIGHT;\n  }\n\n  return {leftButton, middleButton, rightButton};\n}\n\n/**\n * Calculate event position relative to the root element\n */\nexport function getOffsetPosition(event, rootElement) {\n  const {srcEvent} = event;\n\n  // `center` is a hammer.js event property\n  if (!event.center && !Number.isFinite(srcEvent.clientX)) {\n    // Not a gestural event\n    return null;\n  }\n\n  const center = event.center || {\n    x: srcEvent.clientX,\n    y: srcEvent.clientY\n  };\n\n  const rect = rootElement.getBoundingClientRect();\n\n  // Fix scale for map affected by a CSS transform.\n  // See https://stackoverflow.com/a/26893663/3528533\n  const scaleX = rect.width / rootElement.offsetWidth || 1;\n  const scaleY = rect.height / rootElement.offsetHeight || 1;\n\n  // Calculate center relative to the root element\n  const offsetCenter = {\n    x: (center.x - rect.left - rootElement.clientLeft) / scaleX,\n    y: (center.y - rect.top - rootElement.clientTop) / scaleY\n  };\n\n  return {center, offsetCenter};\n}\n"]},"metadata":{},"sourceType":"module"}