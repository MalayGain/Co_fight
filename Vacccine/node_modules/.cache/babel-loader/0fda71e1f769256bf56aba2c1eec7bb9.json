{"ast":null,"code":"var WRAPPED_ANGULAR_PROPS = {\n  longitude: 1,\n  bearing: 1\n};\nexport function mod(value, divisor) {\n  var modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\nexport function isValid(prop) {\n  return Number.isFinite(prop) || Array.isArray(prop);\n}\n\nfunction isWrappedAngularProp(propName) {\n  return propName in WRAPPED_ANGULAR_PROPS;\n}\n\nexport function getEndValueByShortestPath(propName, startValue, endValue) {\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\n  }\n\n  return endValue;\n}","map":{"version":3,"sources":["../../../../src/utils/transition/transition-utils.js"],"names":["WRAPPED_ANGULAR_PROPS","longitude","bearing","modulus","value","divisor","Number","Array","propName","isWrappedAngularProp","Math","endValue"],"mappings":"AAEA,IAAMA,qBAAqB,GAAG;AAC5BC,EAAAA,SAAS,EADmB,CAAA;AAE5BC,EAAAA,OAAO,EAAE;AAFmB,CAA9B;AAKA,OAAO,SAAA,GAAA,CAAA,KAAA,EAAA,OAAA,EAAqD;AAC1D,MAAMC,OAAO,GAAGC,KAAK,GAArB,OAAA;AACA,SAAOD,OAAO,GAAPA,CAAAA,GAAcE,OAAO,GAArBF,OAAAA,GAAP,OAAA;AACD;AAED,OAAO,SAAA,OAAA,CAAA,IAAA,EAAqC;AAC1C,SAAOG,MAAM,CAANA,QAAAA,CAAAA,IAAAA,KAAyBC,KAAK,CAALA,OAAAA,CAAhC,IAAgCA,CAAhC;AACD;;AAED,SAAA,oBAAA,CAAA,QAAA,EAAyD;AACvD,SAAOC,QAAQ,IAAf,qBAAA;AACD;;AAED,OAAO,SAAA,yBAAA,CAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAIG;AACR,MAAIC,oBAAoB,CAApBA,QAAoB,CAApBA,IAAkCC,IAAI,CAAJA,GAAAA,CAASC,QAAQ,GAAjBD,UAAAA,IAAtC,GAAA,EAA6E;AAC3EC,IAAAA,QAAQ,GAAGA,QAAQ,GAARA,CAAAA,GAAeA,QAAQ,GAAvBA,GAAAA,GAAgCA,QAAQ,GAAnDA,GAAAA;AACD;;AACD,SAAA,QAAA;AACD","sourcesContent":["// @flow\n\nconst WRAPPED_ANGULAR_PROPS = {\n  longitude: 1,\n  bearing: 1\n};\n\nexport function mod(value: number, divisor: number): number {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function isValid(prop: any): boolean {\n  return Number.isFinite(prop) || Array.isArray(prop);\n}\n\nfunction isWrappedAngularProp(propName: string): boolean {\n  return propName in WRAPPED_ANGULAR_PROPS;\n}\n\nexport function getEndValueByShortestPath(\n  propName: string,\n  startValue: number,\n  endValue: number\n): number {\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\n  }\n  return endValue;\n}\n"]},"metadata":{},"sourceType":"module"}