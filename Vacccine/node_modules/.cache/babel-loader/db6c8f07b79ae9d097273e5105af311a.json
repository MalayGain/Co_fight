{"ast":null,"code":"import { MAPBOX_LIMITS } from './map-state';\n\nfunction decapitalize(s) {\n  return s[0].toLowerCase() + s.slice(1);\n}\n\nexport function checkVisibilityConstraints(props) {\n  var constraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAPBOX_LIMITS;\n\n  for (var constraintName in constraints) {\n    var type = constraintName.slice(0, 3);\n    var propName = decapitalize(constraintName.slice(3));\n\n    if (type === 'min' && props[propName] < constraints[constraintName]) {\n      return false;\n    }\n\n    if (type === 'max' && props[propName] > constraints[constraintName]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["../../../src/utils/map-constraints.js"],"names":["s","constraints","MAPBOX_LIMITS","type","constraintName","propName","decapitalize","props"],"mappings":"AACA,SAAA,aAAA,QAAA,aAAA;;AAIA,SAAA,YAAA,CAAA,CAAA,EAAyC;AACvC,SAAOA,CAAC,CAADA,CAAC,CAADA,CAAAA,WAAAA,KAAqBA,CAAC,CAADA,KAAAA,CAA5B,CAA4BA,CAA5B;AACD;;AAID,OAAO,SAAA,0BAAA,CAAA,KAAA,EAAwF;AAAA,MAAlCC,WAAkC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAfC,aAAe;;AAC7F,OAAK,IAAL,cAAA,IAAA,WAAA,EAA0C;AAExC,QAAMC,IAAI,GAAGC,cAAc,CAAdA,KAAAA,CAAAA,CAAAA,EAAb,CAAaA,CAAb;AACA,QAAMC,QAAQ,GAAGC,YAAY,CAACF,cAAc,CAAdA,KAAAA,CAA9B,CAA8BA,CAAD,CAA7B;;AAEA,QAAID,IAAI,KAAJA,KAAAA,IAAkBI,KAAK,CAALA,QAAK,CAALA,GAAkBN,WAAW,CAAnD,cAAmD,CAAnD,EAAqE;AACnE,aAAA,KAAA;AACD;;AACD,QAAIE,IAAI,KAAJA,KAAAA,IAAkBI,KAAK,CAALA,QAAK,CAALA,GAAkBN,WAAW,CAAnD,cAAmD,CAAnD,EAAqE;AACnE,aAAA,KAAA;AACD;AACF;;AACD,SAAA,IAAA;AACD","sourcesContent":["// @flow\nimport {MAPBOX_LIMITS} from './map-state';\n\nimport type {ViewState} from '../mapbox/mapbox';\n\nfunction decapitalize(s: string): string {\n  return s[0].toLowerCase() + s.slice(1);\n}\n\n// Checks a visibilityConstraints object to see if the map should be displayed\n// Returns true if props are within the constraints\nexport function checkVisibilityConstraints(props: ViewState, constraints: any = MAPBOX_LIMITS) {\n  for (const constraintName in constraints) {\n    // in the format of min* or max*\n    const type = constraintName.slice(0, 3);\n    const propName = decapitalize(constraintName.slice(3));\n\n    if (type === 'min' && props[propName] < constraints[constraintName]) {\n      return false;\n    }\n    if (type === 'max' && props[propName] > constraints[constraintName]) {\n      return false;\n    }\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}