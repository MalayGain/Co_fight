{"ast":null,"code":"import Hammer from './utils/hammer';\nexport var RECOGNIZERS = Hammer ? [[Hammer.Pan, {\n  event: 'tripan',\n  pointers: 3,\n  threshold: 0,\n  enable: false\n}], [Hammer.Rotate, {\n  enable: false\n}], [Hammer.Pinch, {\n  enable: false\n}], [Hammer.Swipe, {\n  enable: false\n}], [Hammer.Pan, {\n  threshold: 0,\n  enable: false\n}], [Hammer.Press, {\n  enable: false\n}], [Hammer.Tap, {\n  event: 'doubletap',\n  taps: 2,\n  enable: false\n}], [Hammer.Tap, {\n  event: 'anytap',\n  enable: false\n}], [Hammer.Tap, {\n  enable: false\n}]] : null;\nexport var RECOGNIZER_COMPATIBLE_MAP = {\n  tripan: ['rotate', 'pinch', 'pan'],\n  rotate: ['pinch'],\n  pinch: ['pan'],\n  pan: ['press', 'doubletap', 'anytap', 'tap'],\n  doubletap: ['anytap'],\n  anytap: ['tap']\n};\nexport var RECOGNIZER_FALLBACK_MAP = {\n  doubletap: ['tap']\n};\nexport var BASIC_EVENT_ALIASES = {\n  pointerdown: 'pointerdown',\n  pointermove: 'pointermove',\n  pointerup: 'pointerup',\n  touchstart: 'pointerdown',\n  touchmove: 'pointermove',\n  touchend: 'pointerup',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup'\n};\nexport var INPUT_EVENT_TYPES = {\n  KEY_EVENTS: ['keydown', 'keyup'],\n  MOUSE_EVENTS: ['mousedown', 'mousemove', 'mouseup', 'mouseover', 'mouseout', 'mouseleave'],\n  WHEEL_EVENTS: ['wheel', 'mousewheel']\n};\nexport var EVENT_RECOGNIZER_MAP = {\n  tap: 'tap',\n  anytap: 'anytap',\n  doubletap: 'doubletap',\n  press: 'press',\n  pinch: 'pinch',\n  pinchin: 'pinch',\n  pinchout: 'pinch',\n  pinchstart: 'pinch',\n  pinchmove: 'pinch',\n  pinchend: 'pinch',\n  pinchcancel: 'pinch',\n  rotate: 'rotate',\n  rotatestart: 'rotate',\n  rotatemove: 'rotate',\n  rotateend: 'rotate',\n  rotatecancel: 'rotate',\n  tripan: 'tripan',\n  tripanstart: 'tripan',\n  tripanmove: 'tripan',\n  tripanup: 'tripan',\n  tripandown: 'tripan',\n  tripanleft: 'tripan',\n  tripanright: 'tripan',\n  tripanend: 'tripan',\n  tripancancel: 'tripan',\n  pan: 'pan',\n  panstart: 'pan',\n  panmove: 'pan',\n  panup: 'pan',\n  pandown: 'pan',\n  panleft: 'pan',\n  panright: 'pan',\n  panend: 'pan',\n  pancancel: 'pan',\n  swipe: 'swipe',\n  swipeleft: 'swipe',\n  swiperight: 'swipe',\n  swipeup: 'swipe',\n  swipedown: 'swipe'\n};\nexport var GESTURE_EVENT_ALIASES = {\n  click: 'tap',\n  anyclick: 'anytap',\n  dblclick: 'doubletap',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup',\n  mouseover: 'pointerover',\n  mouseout: 'pointerout',\n  mouseleave: 'pointerleave'\n};","map":{"version":3,"sources":["../../src/constants.js"],"names":["RECOGNIZERS","Hammer","event","pointers","threshold","enable","taps","RECOGNIZER_COMPATIBLE_MAP","tripan","rotate","pinch","pan","doubletap","anytap","RECOGNIZER_FALLBACK_MAP","BASIC_EVENT_ALIASES","pointerdown","pointermove","pointerup","touchstart","touchmove","touchend","mousedown","mousemove","mouseup","INPUT_EVENT_TYPES","KEY_EVENTS","MOUSE_EVENTS","WHEEL_EVENTS","EVENT_RECOGNIZER_MAP","tap","press","pinchin","pinchout","pinchstart","pinchmove","pinchend","pinchcancel","rotatestart","rotatemove","rotateend","rotatecancel","tripanstart","tripanmove","tripanup","tripandown","tripanleft","tripanright","tripanend","tripancancel","panstart","panmove","panup","pandown","panleft","panright","panend","pancancel","swipe","swipeleft","swiperight","swipeup","swipedown","GESTURE_EVENT_ALIASES","click","anyclick","dblclick","mouseover","mouseout","mouseleave"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Hammer from './utils/hammer';\n\n// This module contains constants that must be conditionally required\n// due to `window`/`document` references downstream.\nexport const RECOGNIZERS = Hammer\n  ? [\n      [Hammer.Pan, {event: 'tripan', pointers: 3, threshold: 0, enable: false}],\n      [Hammer.Rotate, {enable: false}],\n      [Hammer.Pinch, {enable: false}],\n      [Hammer.Swipe, {enable: false}],\n      [Hammer.Pan, {threshold: 0, enable: false}],\n      [Hammer.Press, {enable: false}],\n      [Hammer.Tap, {event: 'doubletap', taps: 2, enable: false}],\n      // TODO - rename to 'tap' and 'singletap' in the next major release\n      [Hammer.Tap, {event: 'anytap', enable: false}],\n      [Hammer.Tap, {enable: false}]\n    ]\n  : null;\n\n// Recognize the following gestures even if a given recognizer succeeds\nexport const RECOGNIZER_COMPATIBLE_MAP = {\n  tripan: ['rotate', 'pinch', 'pan'],\n  rotate: ['pinch'],\n  pinch: ['pan'],\n  pan: ['press', 'doubletap', 'anytap', 'tap'],\n  doubletap: ['anytap'],\n  anytap: ['tap']\n};\n\n// Recognize the folling gestures only if a given recognizer fails\nexport const RECOGNIZER_FALLBACK_MAP = {\n  doubletap: ['tap']\n};\n\n/**\n * Only one set of basic input events will be fired by Hammer.js:\n * either pointer, touch, or mouse, depending on system support.\n * In order to enable an application to be agnostic of system support,\n * alias basic input events into \"classes\" of events: down, move, and up.\n * See `_onBasicInput()` for usage of these aliases.\n */\nexport const BASIC_EVENT_ALIASES = {\n  pointerdown: 'pointerdown',\n  pointermove: 'pointermove',\n  pointerup: 'pointerup',\n  touchstart: 'pointerdown',\n  touchmove: 'pointermove',\n  touchend: 'pointerup',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup'\n};\n\nexport const INPUT_EVENT_TYPES = {\n  KEY_EVENTS: ['keydown', 'keyup'],\n  MOUSE_EVENTS: ['mousedown', 'mousemove', 'mouseup', 'mouseover', 'mouseout', 'mouseleave'],\n  WHEEL_EVENTS: [\n    // Chrome, Safari\n    'wheel',\n    // IE\n    'mousewheel'\n  ]\n};\n\n/**\n * \"Gestural\" events are those that have semantic meaning beyond the basic input event,\n * e.g. a click or tap is a sequence of `down` and `up` events with no `move` event in between.\n * Hammer.js handles these with its Recognizer system;\n * this block maps event names to the Recognizers required to detect the events.\n */\nexport const EVENT_RECOGNIZER_MAP = {\n  tap: 'tap',\n  anytap: 'anytap',\n  doubletap: 'doubletap',\n  press: 'press',\n  pinch: 'pinch',\n  pinchin: 'pinch',\n  pinchout: 'pinch',\n  pinchstart: 'pinch',\n  pinchmove: 'pinch',\n  pinchend: 'pinch',\n  pinchcancel: 'pinch',\n  rotate: 'rotate',\n  rotatestart: 'rotate',\n  rotatemove: 'rotate',\n  rotateend: 'rotate',\n  rotatecancel: 'rotate',\n  tripan: 'tripan',\n  tripanstart: 'tripan',\n  tripanmove: 'tripan',\n  tripanup: 'tripan',\n  tripandown: 'tripan',\n  tripanleft: 'tripan',\n  tripanright: 'tripan',\n  tripanend: 'tripan',\n  tripancancel: 'tripan',\n  pan: 'pan',\n  panstart: 'pan',\n  panmove: 'pan',\n  panup: 'pan',\n  pandown: 'pan',\n  panleft: 'pan',\n  panright: 'pan',\n  panend: 'pan',\n  pancancel: 'pan',\n  swipe: 'swipe',\n  swipeleft: 'swipe',\n  swiperight: 'swipe',\n  swipeup: 'swipe',\n  swipedown: 'swipe'\n};\n\n/**\n * Map gestural events typically provided by browsers\n * that are not reported in 'hammer.input' events\n * to corresponding Hammer.js gestures.\n */\nexport const GESTURE_EVENT_ALIASES = {\n  click: 'tap',\n  anyclick: 'anytap',\n  dblclick: 'doubletap',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup',\n  mouseover: 'pointerover',\n  mouseout: 'pointerout',\n  mouseleave: 'pointerleave'\n};\n"]},"metadata":{},"sourceType":"module"}