{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport DraggableControl from './draggable-control';\nimport { crispPixel } from '../utils/crisp-pixel';\nvar propTypes = Object.assign({}, DraggableControl.propTypes, {\n  className: PropTypes.string,\n  longitude: PropTypes.number.isRequired,\n  latitude: PropTypes.number.isRequired\n});\nvar defaultProps = Object.assign({}, DraggableControl.defaultProps, {\n  className: ''\n});\n\nvar Marker = function (_DraggableControl) {\n  _inherits(Marker, _DraggableControl);\n\n  var _super = _createSuper(Marker);\n\n  function Marker() {\n    var _this;\n\n    _classCallCheck(this, Marker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_control\", null);\n\n    return _this;\n  }\n\n  _createClass(Marker, [{\n    key: \"_getPosition\",\n    value: function _getPosition() {\n      var _this$props = this.props,\n          longitude = _this$props.longitude,\n          latitude = _this$props.latitude,\n          offsetLeft = _this$props.offsetLeft,\n          offsetTop = _this$props.offsetTop;\n      var _this$state = this.state,\n          dragPos = _this$state.dragPos,\n          dragOffset = _this$state.dragOffset;\n\n      if (dragPos && dragOffset) {\n        return this._getDraggedPosition(dragPos, dragOffset);\n      }\n\n      var _this$_context$viewpo = this._context.viewport.project([longitude, latitude]),\n          _this$_context$viewpo2 = _slicedToArray(_this$_context$viewpo, 2),\n          x = _this$_context$viewpo2[0],\n          y = _this$_context$viewpo2[1];\n\n      x += offsetLeft;\n      y += offsetTop;\n      return [x, y];\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var _this$_getPosition = this._getPosition(),\n          _this$_getPosition2 = _slicedToArray(_this$_getPosition, 2),\n          x = _this$_getPosition2[0],\n          y = _this$_getPosition2[1];\n\n      var transform = \"translate(\".concat(crispPixel(x), \"px, \").concat(crispPixel(y), \"px)\");\n      var div = this._containerRef.current;\n\n      if (this._control && div) {\n        div.style.transform = transform;\n      } else {\n        var _this$props2 = this.props,\n            className = _this$props2.className,\n            draggable = _this$props2.draggable;\n        var dragPos = this.state.dragPos;\n        var containerStyle = {\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          transform: transform,\n          cursor: draggable ? dragPos ? 'grabbing' : 'grab' : 'auto'\n        };\n        this._control = React.createElement(\"div\", {\n          className: \"mapboxgl-marker \".concat(className),\n          ref: this._containerRef,\n          style: containerStyle\n        }, this.props.children);\n      }\n\n      return this._control;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this._control = null;\n      return _get(_getPrototypeOf(Marker.prototype), \"render\", this).call(this);\n    }\n  }]);\n\n  return Marker;\n}(DraggableControl);\n\n_defineProperty(Marker, \"propTypes\", propTypes);\n\n_defineProperty(Marker, \"defaultProps\", defaultProps);\n\nexport { Marker as default };","map":{"version":3,"sources":["../../../src/components/marker.js"],"names":["propTypes","DraggableControl","className","PropTypes","longitude","latitude","isRequired","defaultProps","Marker","offsetLeft","offsetTop","dragPos","dragOffset","x","y","transform","crispPixel","div","draggable","containerStyle","position","left","top","cursor"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport DraggableControl from './draggable-control';\nimport {crispPixel} from '../utils/crisp-pixel';\n\nimport type {DraggableControlProps} from './draggable-control';\n\nconst propTypes = Object.assign({}, DraggableControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired\n});\n\nconst defaultProps = Object.assign({}, DraggableControl.defaultProps, {\n  className: ''\n});\n\nexport type MarkerProps = DraggableControlProps & {\n  className: string,\n  longitude: number,\n  latitude: number\n};\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the marker's position when the parent re-renders.\n */\nexport default class Marker extends DraggableControl<MarkerProps> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  _control: any = null;\n\n  _getPosition(): [number, number] {\n    const {longitude, latitude, offsetLeft, offsetTop} = this.props;\n    const {dragPos, dragOffset} = this.state;\n\n    // If dragging, just return the current drag position\n    if (dragPos && dragOffset) {\n      return this._getDraggedPosition(dragPos, dragOffset);\n    }\n\n    // Otherwise return the projected lat/lng with offset\n    let [x, y] = this._context.viewport.project([longitude, latitude]);\n    x += offsetLeft;\n    y += offsetTop;\n    return [x, y];\n  }\n\n  _render() {\n    const [x, y] = this._getPosition();\n    const transform = `translate(${crispPixel(x)}px, ${crispPixel(y)}px)`;\n    const div = this._containerRef.current;\n\n    if (this._control && div) {\n      // Perf: avoid rerendering if only the viewport changed\n      div.style.transform = transform;\n    } else {\n      const {className, draggable} = this.props;\n      const {dragPos} = this.state;\n\n      const containerStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        transform,\n        cursor: draggable ? (dragPos ? 'grabbing' : 'grab') : 'auto'\n      };\n\n      this._control = (\n        <div\n          className={`mapboxgl-marker ${className}`}\n          ref={this._containerRef}\n          style={containerStyle}\n        >\n          {this.props.children}\n        </div>\n      );\n    }\n    return this._control;\n  }\n\n  render() {\n    // invalidate cached element\n    this._control = null;\n    return super.render();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}