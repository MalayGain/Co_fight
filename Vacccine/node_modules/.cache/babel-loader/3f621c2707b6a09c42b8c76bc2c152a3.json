{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport { createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\nimport { getDynamicPosition, ANCHOR_POSITION } from '../utils/dynamic-position';\nimport { crispPercentage, crispPixel } from '../utils/crisp-pixel';\nvar propTypes = Object.assign({}, BaseControl.propTypes, {\n  className: PropTypes.string,\n  longitude: PropTypes.number.isRequired,\n  latitude: PropTypes.number.isRequired,\n  altitude: PropTypes.number,\n  offsetLeft: PropTypes.number,\n  offsetTop: PropTypes.number,\n  tipSize: PropTypes.number,\n  closeButton: PropTypes.bool,\n  closeOnClick: PropTypes.bool,\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  dynamicPosition: PropTypes.bool,\n  sortByDepth: PropTypes.bool,\n  onClose: PropTypes.func\n});\nvar defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: function onClose() {}\n});\n\nvar Popup = function (_BaseControl) {\n  _inherits(Popup, _BaseControl);\n\n  var _super = _createSuper(Popup);\n\n  function Popup() {\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_closeOnClick\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_contentRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onClick\", function (evt) {\n      if (_this.props.captureClick) {\n        evt.stopPropagation();\n      }\n\n      if (_this.props.closeOnClick || evt.target.className === 'mapboxgl-popup-close-button') {\n        _this.props.onClose();\n\n        var eventManager = _this._context.eventManager;\n\n        if (eventManager) {\n          eventManager.once('click', function (e) {\n            return e.stopPropagation();\n          }, evt.target);\n        }\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _get(_getPrototypeOf(Popup.prototype), \"componentDidMount\", this).call(this);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"_getPosition\",\n    value: function _getPosition(x, y) {\n      var viewport = this._context.viewport;\n      var _this$props = this.props,\n          anchor = _this$props.anchor,\n          dynamicPosition = _this$props.dynamicPosition,\n          tipSize = _this$props.tipSize;\n      var content = this._contentRef.current;\n\n      if (content) {\n        return dynamicPosition ? getDynamicPosition({\n          x: x,\n          y: y,\n          anchor: anchor,\n          padding: tipSize,\n          width: viewport.width,\n          height: viewport.height,\n          selfWidth: content.clientWidth,\n          selfHeight: content.clientHeight\n        }) : anchor;\n      }\n\n      return anchor;\n    }\n  }, {\n    key: \"_getContainerStyle\",\n    value: function _getContainerStyle(x, y, z, positionType) {\n      var viewport = this._context.viewport;\n      var _this$props2 = this.props,\n          offsetLeft = _this$props2.offsetLeft,\n          offsetTop = _this$props2.offsetTop,\n          sortByDepth = _this$props2.sortByDepth;\n      var anchorPosition = ANCHOR_POSITION[positionType];\n      var left = x + offsetLeft;\n      var top = y + offsetTop;\n      var el = this._containerRef.current;\n      var xPercentage = crispPercentage(el, -anchorPosition.x * 100);\n      var yPercentage = crispPercentage(el, -anchorPosition.y * 100, 'y');\n      var style = {\n        position: 'absolute',\n        transform: \"\\n        translate(\".concat(xPercentage, \"%, \").concat(yPercentage, \"%)\\n        translate(\").concat(crispPixel(left), \"px, \").concat(crispPixel(top), \"px)\\n      \"),\n        display: undefined,\n        zIndex: undefined\n      };\n\n      if (!sortByDepth) {\n        return style;\n      }\n\n      if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n        style.display = 'none';\n      } else {\n        style.zIndex = Math.floor((1 - z) / 2 * 100000);\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_renderTip\",\n    value: function _renderTip(positionType) {\n      var tipSize = this.props.tipSize;\n      return React.createElement(\"div\", {\n        key: \"tip\",\n        className: \"mapboxgl-popup-tip\",\n        style: {\n          borderWidth: tipSize\n        }\n      });\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      var _this$props3 = this.props,\n          closeButton = _this$props3.closeButton,\n          children = _this$props3.children;\n      var onClick = this._context.eventManager ? null : this._onClick;\n      return React.createElement(\"div\", {\n        key: \"content\",\n        ref: this._contentRef,\n        className: \"mapboxgl-popup-content\",\n        onClick: onClick\n      }, closeButton && React.createElement(\"button\", {\n        key: \"close-button\",\n        className: \"mapboxgl-popup-close-button\",\n        type: \"button\"\n      }, \"\\xD7\"), children);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          longitude = _this$props4.longitude,\n          latitude = _this$props4.latitude,\n          altitude = _this$props4.altitude;\n\n      var _this$_context$viewpo = this._context.viewport.project([longitude, latitude, altitude]),\n          _this$_context$viewpo2 = _slicedToArray(_this$_context$viewpo, 3),\n          x = _this$_context$viewpo2[0],\n          y = _this$_context$viewpo2[1],\n          z = _this$_context$viewpo2[2];\n\n      var positionType = this._getPosition(x, y);\n\n      var containerStyle = this._getContainerStyle(x, y, z, positionType);\n\n      return React.createElement(\"div\", {\n        className: \"mapboxgl-popup mapboxgl-popup-anchor-\".concat(positionType, \" \").concat(className),\n        style: containerStyle,\n        ref: this._containerRef\n      }, this._renderTip(positionType), this._renderContent());\n    }\n  }]);\n\n  return Popup;\n}(BaseControl);\n\n_defineProperty(Popup, \"propTypes\", propTypes);\n\n_defineProperty(Popup, \"defaultProps\", defaultProps);\n\nexport { Popup as default };","map":{"version":3,"sources":["../../../src/components/popup.js"],"names":["propTypes","BaseControl","className","PropTypes","longitude","latitude","altitude","offsetLeft","offsetTop","tipSize","closeButton","closeOnClick","anchor","Object","dynamicPosition","sortByDepth","onClose","func","defaultProps","Popup","createRef","x","y","viewport","content","getDynamicPosition","padding","width","height","selfWidth","selfHeight","clientHeight","z","positionType","anchorPosition","ANCHOR_POSITION","left","top","el","xPercentage","crispPercentage","yPercentage","style","position","transform","crispPixel","display","zIndex","undefined","Math","evt","eventManager","e","borderWidth","children","onClick","containerStyle","_containerRef"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {createRef} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport {getDynamicPosition, ANCHOR_POSITION} from '../utils/dynamic-position';\n\nimport type {BaseControlProps} from './base-control';\nimport {crispPercentage, crispPixel} from '../utils/crisp-pixel';\nimport type {PositionType} from '../utils/dynamic-position';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Longitude of the anchor point\n  longitude: PropTypes.number.isRequired,\n  // Latitude of the anchor point\n  latitude: PropTypes.number.isRequired,\n  // Altitude of the anchor point\n  altitude: PropTypes.number,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number,\n  // Size of the tip\n  tipSize: PropTypes.number,\n  // Whether to show close button\n  closeButton: PropTypes.bool,\n  // Whether to close on click\n  closeOnClick: PropTypes.bool,\n  // The popup's location relative to the coordinate\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\n  // Whether the popup anchor should be auto-adjusted to fit within the container\n  dynamicPosition: PropTypes.bool,\n  // Whether popups should be sorted by depth. Useful when using multiple popups with tilted map.\n  sortByDepth: PropTypes.bool,\n  // Callback when component is closed\n  onClose: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  altitude: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n  tipSize: 10,\n  anchor: 'bottom',\n  dynamicPosition: true,\n  sortByDepth: false,\n  closeButton: true,\n  closeOnClick: true,\n  onClose: () => {}\n});\n\nexport type PopupProps = BaseControlProps & {\n  className: string,\n  longitude: number,\n  latitude: number,\n  altitude: number,\n  offsetLeft: number,\n  offsetTop: number,\n  tipSize: number,\n  closeButton: boolean,\n  closeOnClick: boolean,\n  anchor: PositionType,\n  dynamicPosition: boolean,\n  sortByDepth: boolean,\n  onClose: Function\n};\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the popup's position when the parent re-renders.\n */\nexport default class Popup extends BaseControl<PopupProps, *, HTMLDivElement> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  _closeOnClick: boolean = false;\n  _contentRef: {current: null | HTMLDivElement} = createRef();\n\n  componentDidMount() {\n    super.componentDidMount();\n    // Container just got a size, re-calculate position\n    this.forceUpdate();\n  }\n\n  _getPosition(x: number, y: number): PositionType {\n    const {viewport} = this._context;\n    const {anchor, dynamicPosition, tipSize} = this.props;\n    const content = this._contentRef.current;\n\n    if (content) {\n      return dynamicPosition\n        ? getDynamicPosition({\n            x,\n            y,\n            anchor,\n            padding: tipSize,\n            width: viewport.width,\n            height: viewport.height,\n            selfWidth: content.clientWidth,\n            selfHeight: content.clientHeight\n          })\n        : anchor;\n    }\n\n    return anchor;\n  }\n\n  _getContainerStyle(x: number, y: number, z: number, positionType: PositionType) {\n    const {viewport} = this._context;\n    const {offsetLeft, offsetTop, sortByDepth} = this.props;\n    const anchorPosition = ANCHOR_POSITION[positionType];\n    const left = x + offsetLeft;\n    const top = y + offsetTop;\n\n    const el = this._containerRef.current;\n    const xPercentage = crispPercentage(el, -anchorPosition.x * 100);\n    const yPercentage = crispPercentage(el, -anchorPosition.y * 100, 'y');\n    const style = {\n      position: 'absolute',\n      transform: `\n        translate(${xPercentage}%, ${yPercentage}%)\n        translate(${crispPixel(left)}px, ${crispPixel(top)}px)\n      `,\n      display: undefined,\n      zIndex: undefined\n    };\n\n    if (!sortByDepth) {\n      return style;\n    }\n    if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\n      // clipped\n      style.display = 'none';\n    } else {\n      // use z-index to rearrange components\n      style.zIndex = Math.floor(((1 - z) / 2) * 100000);\n    }\n\n    return style;\n  }\n\n  _onClick = evt => {\n    if (this.props.captureClick) {\n      evt.stopPropagation();\n    }\n\n    if (this.props.closeOnClick || evt.target.className === 'mapboxgl-popup-close-button') {\n      this.props.onClose();\n\n      const {eventManager} = this._context;\n      if (eventManager) {\n        // Using with InteractiveMap\n        // After we call `onClose` on `anyclick`, this component will be unmounted\n        // at which point we unregister the event listeners and stop blocking propagation.\n        // Then after a short delay a `click` event will fire\n        // Attach a one-time event listener here to prevent it from triggering `onClick` of the base map\n        eventManager.once('click', e => e.stopPropagation(), evt.target);\n      }\n    }\n  };\n\n  _renderTip(positionType: PositionType) {\n    const {tipSize} = this.props;\n\n    return <div key=\"tip\" className=\"mapboxgl-popup-tip\" style={{borderWidth: tipSize}} />;\n  }\n\n  _renderContent() {\n    const {closeButton, children} = this.props;\n    // If eventManager does not exist (using with static map), listen to React event\n    const onClick = this._context.eventManager ? null : this._onClick;\n\n    return (\n      <div\n        key=\"content\"\n        ref={this._contentRef}\n        className=\"mapboxgl-popup-content\"\n        onClick={onClick}\n      >\n        {closeButton && (\n          <button key=\"close-button\" className=\"mapboxgl-popup-close-button\" type=\"button\">\n            ×\n          </button>\n        )}\n        {children}\n      </div>\n    );\n  }\n\n  _render() {\n    const {className, longitude, latitude, altitude} = this.props;\n\n    const [x, y, z] = this._context.viewport.project([longitude, latitude, altitude]);\n\n    const positionType = this._getPosition(x, y);\n    const containerStyle = this._getContainerStyle(x, y, z, positionType);\n\n    return (\n      <div\n        className={`mapboxgl-popup mapboxgl-popup-anchor-${positionType} ${className}`}\n        style={containerStyle}\n        ref={this._containerRef}\n      >\n        {this._renderTip(positionType)}\n        {this._renderContent()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}